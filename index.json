{"repository_name":"github.com/veelenga/ameba","body":"\n  \n  \n  \n  \n    \n      \n    \n  \n  \n    \n    \n    \n    \n  \n  \n\n\n## About\n\nAmeba is a static code analysis tool for the Crystal language.\nIt enforces a consistent [Crystal code style](https://crystal-lang.org/docs/conventions/coding_style.html),\nalso catches code smells and wrong code constructions.\n\n## Usage\n\nRun `ameba` binary within your project directory to catch code issues:\n\n```sh\n$ ameba\nInspecting 107 files.\n\n...............F.....................F...............................................\n.....................\n\nsrc/ameba/rule/unneeded_disable_directive.cr:29:7\nUselessAssign: Useless assignment to variable `s`\n\nsrc/ameba/formatter/flycheck_formatter.cr:5:21\nUnusedArgument: Unused argument `location`\n\nFinished in 248.9 milliseconds\n\n107 inspected, 2 failures.\n\n```\n\n## Installation\n\n### As a project dependency:\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndevelopment_dependencies:\n  ameba:\n    github: veelenga/ameba\n```\n\nBuild `bin/ameba` binary within your project directory while running `shards install`.\n\nYou may also want to use it on [Travis](travis-ci.org):\n\n```yaml\n# .travis.yml\nlanguage: crystal\ninstall:\n  - shards install\nscript:\n  - crystal spec\n  - bin/ameba\n```\n\nUsing this config Ameba will inspect files just after the specs run. Travis will also fail\nthe build if some problems detected.\n\n### OS X\n\n```sh\n$ brew tap veelenga/tap\n$ brew install ameba\n```\n\n### From sources\n\n```sh\n$ git clone https://github.com/veelenga/ameba && cd ameba\n$ make install\n```\n\n## Configuration\n\nDefault configuration file is `.ameba.yml`.\nIt allows to configure rule properties, disable specific rules and exclude sources from the rules.\n\nGenerate new file by running `ameba --gen-config`.\n\n### Inline disabling\n\nOne or more rules can be disabled using inline directives:\n\n```crystal\n# ameba:disable LargeNumbers\ntime = Time.epoch(1483859302)\n\ntime = Time.epoch(1483859302) # ameba:disable LargeNumbers\n```\n\n## Editor integration\n\n * Vim: [vim-crystal](https://github.com/rhysd/vim-crystal) (via [Syntastic](https://github.com/vim-syntastic/syntastic))\n * Emacs: [ameba.el](https://github.com/veelenga/ameba.el)\n\n## Credits & inspirations\n\n- [Crystal Language](crystal-lang.org)\n- [Rubocop](http://rubocop.readthedocs.io/en/latest/)\n- [Credo](http://credo-ci.org/)\n- [Dogma](https://github.com/lpil/dogma)\n\n## Contributors\n\n- [veelenga](https://github.com/veelenga) Vitalii Elenhaupt - creator, maintainer\n","program":{"html_id":"github.com/veelenga/ameba/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/veelenga/ameba","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/veelenga/ameba/Ameba","path":"Ameba.html","kind":"module","full_name":"Ameba","name":"Ameba","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"ameba/config.cr","line_number":14,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/config.cr"},{"filename":"ameba/inline_comments.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/inline_comments.cr"},{"filename":"ameba/runner.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/runner.cr"},{"filename":"ameba/source.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr"},{"filename":"ameba/tokenizer.cr","line_number":3,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/tokenizer.cr"},{"filename":"ameba.cr","line_number":25,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"VERSION","value":"{{ (`shards version /home/travis/build/veelenga/ameba/src`).chomp.stringify }}","doc":null,"summary":null}],"included_modules":[],"extended_modules":[{"html_id":"github.com/veelenga/ameba/Ameba","kind":"module","full_name":"Ameba","name":"Ameba"}],"subclasses":[],"including_types":[],"namespace":null,"doc":"Ameba's entry module.\n\nTo run the linter with default parameters:\n\n```\nAmeba.run\n```\n\nTo configure and run it:\n\n```\nconfig = Ameba::Config.load\nconfig.formatter = formatter\nconfig.files = file_paths\n\nAmeba.run config\n```\n","summary":"<p>Ameba's entry module.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"run(config=Config.load)-instance-method","html_id":"run(config=Config.load)-instance-method","name":"run","doc":"Initializes `Ameba::Runner` and runs it.\nCan be configured via `config` parameter.\n\nExamples:\n\n```\nAmeba.run\nAmeba.run config\n```\n","summary":"<p>Initializes <code><a href=\"Ameba/Runner.html\">Ameba::Runner</a></code> and runs it.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"Config.load","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"t\">Config</span>.load)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba.cr#L40","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba.cr#L40","def":{"name":"run","args":[{"name":"config","doc":null,"default_value":"Config.load","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(Runner.new(config)).run"}}],"macros":[],"types":[{"html_id":"github.com/veelenga/ameba/Ameba/AST","path":"Ameba/AST.html","kind":"module","full_name":"Ameba::AST","name":"AST","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"ameba/ast/branch.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branch.cr"},{"filename":"ameba/ast/branchable.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branchable.cr"},{"filename":"ameba/ast/variabling/argument.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/argument.cr"},{"filename":"ameba/ast/variabling/variable.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr"},{"filename":"ameba/ast/variabling/reference.cr","line_number":3,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/reference.cr"},{"filename":"ameba/ast/variabling/assignment.cr","line_number":4,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr"},{"filename":"ameba/ast/scope.cr","line_number":3,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr"},{"filename":"ameba/ast/visitors/base_visitor.cr","line_number":4,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/base_visitor.cr"},{"filename":"ameba/ast/visitors/node_visitor.cr","line_number":3,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr"},{"filename":"ameba/ast/visitors/scope_visitor.cr","line_number":3,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/scope_visitor.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"NODES","value":"[Alias, Assign, Call, Case, ClassDef, ClassVar, Def, EnumDef, ExceptionHandler, Expressions, HashLiteral, If, InstanceVar, LibDef, ModuleDef, NilLiteral, StringInterpolation, Unless, Var, When, While]","doc":"List of nodes to be visited by Ameba's rules.","summary":"<p>List of nodes to be visited by Ameba's rules.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba","kind":"module","full_name":"Ameba","name":"Ameba"},"doc":"A module that helps to traverse Crystal AST using `Crystal::Visitor`.","summary":"<p>A module that helps to traverse Crystal AST using <code>Crystal::Visitor</code>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/veelenga/ameba/Ameba/AST/Argument","path":"Ameba/AST/Argument.html","kind":"class","full_name":"Ameba::AST::Argument","name":"Argument","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/ast/variabling/argument.cr","line_number":15,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/argument.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/AST","kind":"module","full_name":"Ameba::AST","name":"AST"},"doc":"Represents the argument of some node.\nHolds the reference to the variable, thus to scope.\n\nFor example, all these vars are arguments:\n\n```\ndef method(a, b, c = 10, &block)\n  3.times do |i|\n  end\n\n  ->(x : Int32) {}\nend\n```","summary":"<p>Represents the argument of some node.</p>","class_methods":[],"constructors":[{"id":"new(node,variable)-class-method","html_id":"new(node,variable)-class-method","name":"new","doc":"Creates a new argument.\n\n```\nArgument.new(node, variable)\n```","summary":"<p>Creates a new argument.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""},{"name":"variable","doc":null,"default_value":"","external_name":"variable","restriction":""}],"args_string":"(node, variable)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/argument.cr#L30","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/argument.cr#L30","def":{"name":"new","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""},{"name":"variable","doc":null,"default_value":"","external_name":"variable","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(node, variable)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"ignored?-instance-method","html_id":"ignored?-instance-method","name":"ignored?","doc":"Returns true if the name starts with '_', false if not.","summary":"<p>Returns true if the name starts with '_', false if not.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/argument.cr#L34","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/argument.cr#L34","def":{"name":"ignored?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"name.starts_with?('_')"}},{"id":"location(*args,**options)-instance-method","html_id":"location(*args,**options)-instance-method","name":"location","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/argument.cr#L22","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/argument.cr#L22","def":{"name":"location","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@node.location(*args, **options)"}},{"id":"location(*args,**options,&block)-instance-method","html_id":"location(*args,**options,&amp;block)-instance-method","name":"location","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/argument.cr#L22","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/argument.cr#L22","def":{"name":"location","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@node.location(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":"Name of the argument.","summary":"<p>Name of the argument.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/argument.cr#L39","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/argument.cr#L39","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case current_node = node\nwhen Crystal::Var\n  current_node.name\nwhen Crystal::Arg\n  current_node.name\nelse\n  raise(ArgumentError.new(\"invalid node\"))\nend"}},{"id":"node:Crystal::Var|Crystal::Arg-instance-method","html_id":"node:Crystal::Var|Crystal::Arg-instance-method","name":"node","doc":"The actual node.","summary":"<p>The actual node.</p>","abstract":false,"args":[],"args_string":" : Crystal::Var | Crystal::Arg","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/argument.cr#L17","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/argument.cr#L17","def":{"name":"node","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crystal::Var | Crystal::Arg","visibility":"Public","body":"@node"}},{"id":"to_s(*args,**options)-instance-method","html_id":"to_s(*args,**options)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/argument.cr#L23","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/argument.cr#L23","def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@node.to_s(*args, **options)"}},{"id":"to_s(*args,**options,&block)-instance-method","html_id":"to_s(*args,**options,&amp;block)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/argument.cr#L23","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/argument.cr#L23","def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@node.to_s(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"variable:Variable-instance-method","html_id":"variable:Variable-instance-method","name":"variable","doc":"Variable of this argument (may be the same node)","summary":"<p>Variable of this argument (may be the same node)</p>","abstract":false,"args":[],"args_string":" : Variable","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/argument.cr#L20","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/argument.cr#L20","def":{"name":"variable","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Variable","visibility":"Public","body":"@variable"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/AST/Assignment","path":"Ameba/AST/Assignment.html","kind":"class","full_name":"Ameba::AST::Assignment","name":"Assignment","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/ast/variabling/assignment.cr","line_number":7,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/AST","kind":"module","full_name":"Ameba::AST","name":"AST"},"doc":"Represents the assignment to the variable.\nHolds the assign node and the variable.","summary":"<p>Represents the assignment to the variable.</p>","class_methods":[],"constructors":[{"id":"new(node,variable)-class-method","html_id":"new(node,variable)-class-method","name":"new","doc":"Creates a new assignment.\n\n```\nAssignment.new(node, variable)\n```\n","summary":"<p>Creates a new assignment.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""},{"name":"variable","doc":null,"default_value":"","external_name":"variable","restriction":""}],"args_string":"(node, variable)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr#L29","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr#L29","def":{"name":"new","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""},{"name":"variable","doc":null,"default_value":"","external_name":"variable","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(node, variable)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"branch:Branch?-instance-method","html_id":"branch:Branch?-instance-method","name":"branch","doc":"Branch of this assignment.","summary":"<p>Branch of this assignment.</p>","abstract":false,"args":[],"args_string":" : Branch?","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr#L17","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr#L17","def":{"name":"branch","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Branch | ::Nil","visibility":"Public","body":"@branch"}},{"id":"location(*args,**options)-instance-method","html_id":"location(*args,**options)-instance-method","name":"location","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr#L19","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr#L19","def":{"name":"location","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@node.location(*args, **options)"}},{"id":"location(*args,**options,&block)-instance-method","html_id":"location(*args,**options,&amp;block)-instance-method","name":"location","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr#L19","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr#L19","def":{"name":"location","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@node.location(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"node:Crystal::ASTNode-instance-method","html_id":"node:Crystal::ASTNode-instance-method","name":"node","doc":"The actual assignment node.","summary":"<p>The actual assignment node.</p>","abstract":false,"args":[],"args_string":" : Crystal::ASTNode","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr#L11","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr#L11","def":{"name":"node","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crystal::ASTNode","visibility":"Public","body":"@node"}},{"id":"referenced=(referenced)-instance-method","html_id":"referenced=(referenced)-instance-method","name":"referenced=","doc":null,"summary":null,"abstract":false,"args":[{"name":"referenced","doc":null,"default_value":"","external_name":"referenced","restriction":""}],"args_string":"(referenced)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr#L8","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr#L8","def":{"name":"referenced=","args":[{"name":"referenced","doc":null,"default_value":"","external_name":"referenced","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@referenced = referenced"}},{"id":"referenced?:Bool-instance-method","html_id":"referenced?:Bool-instance-method","name":"referenced?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr#L8","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr#L8","def":{"name":"referenced?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@referenced"}},{"id":"referenced_in_loop?-instance-method","html_id":"referenced_in_loop?-instance-method","name":"referenced_in_loop?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr#L38","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr#L38","def":{"name":"referenced_in_loop?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@variable.referenced? && @branch.try(&.in_loop?)"}},{"id":"scope(*args,**options)-instance-method","html_id":"scope(*args,**options)-instance-method","name":"scope","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr#L21","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr#L21","def":{"name":"scope","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@variable.scope(*args, **options)"}},{"id":"scope(*args,**options,&block)-instance-method","html_id":"scope(*args,**options,&amp;block)-instance-method","name":"scope","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr#L21","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr#L21","def":{"name":"scope","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@variable.scope(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"to_s(*args,**options)-instance-method","html_id":"to_s(*args,**options)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr#L20","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr#L20","def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@node.to_s(*args, **options)"}},{"id":"to_s(*args,**options,&block)-instance-method","html_id":"to_s(*args,**options,&amp;block)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr#L20","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr#L20","def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@node.to_s(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"variable:Variable-instance-method","html_id":"variable:Variable-instance-method","name":"variable","doc":"Variable of this assignment.","summary":"<p>Variable of this assignment.</p>","abstract":false,"args":[],"args_string":" : Variable","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr#L14","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/assignment.cr#L14","def":{"name":"variable","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Variable","visibility":"Public","body":"@variable"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/AST/BaseVisitor","path":"Ameba/AST/BaseVisitor.html","kind":"class","full_name":"Ameba::AST::BaseVisitor","name":"BaseVisitor","abstract":true,"superclass":{"html_id":"github.com/veelenga/ameba/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/ast/visitors/base_visitor.cr","line_number":6,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/base_visitor.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/veelenga/ameba/Ameba/AST/NodeVisitor","kind":"class","full_name":"Ameba::AST::NodeVisitor","name":"NodeVisitor"},{"html_id":"github.com/veelenga/ameba/Ameba/AST/ScopeVisitor","kind":"class","full_name":"Ameba::AST::ScopeVisitor","name":"ScopeVisitor"}],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/AST","kind":"module","full_name":"Ameba::AST","name":"AST"},"doc":"An abstract base visitor that utilizes general logic for all visitors.","summary":"<p>An abstract base visitor that utilizes general logic for all visitors.</p>","class_methods":[],"constructors":[{"id":"new(rule,source)-class-method","html_id":"new(rule,source)-class-method","name":"new","doc":"Creates instance of this visitor.\n\n```\nvisitor = Ameba::AST::NodeVisitor.new(rule, source)\n```\n","summary":"<p>Creates instance of this visitor.</p>","abstract":false,"args":[{"name":"rule","doc":null,"default_value":"","external_name":"rule","restriction":""},{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(rule, source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/base_visitor.cr#L19","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/base_visitor.cr#L19","def":{"name":"new","args":[{"name":"rule","doc":null,"default_value":"","external_name":"rule","restriction":""},{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(rule, source)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"visit(node:Crystal::ASTNode)-instance-method","html_id":"visit(node:Crystal::ASTNode)-instance-method","name":"visit","doc":"A main visit method that accepts `Crystal::ASTNode`.\nReturns true meaning all child nodes will be traversed.","summary":"<p>A main visit method that accepts <code>Crystal::ASTNode</code>.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ASTNode"}],"args_string":"(node : Crystal::ASTNode)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/base_visitor.cr#L25","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/base_visitor.cr#L25","def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ASTNode"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"true"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/AST/Branch","path":"Ameba/AST/Branch.html","kind":"class","full_name":"Ameba::AST::Branch","name":"Branch","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/ast/branch.cr","line_number":15,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branch.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/AST","kind":"module","full_name":"Ameba::AST","name":"AST"},"doc":"Represents the branch in Crystal code.\nBranch is a part of a branchable statement.\nFor example, the branchable if statement contains 3 branches:\n\n```\nif a = something # --> Branch A\n  a = 1          # --> Branch B\n  put a if out   # --> Branch C\nelse\n  do_something a # --> Branch D\nend\n```\n","summary":"<p>Represents the branch in Crystal code.</p>","class_methods":[{"id":"of(node:Crystal::ASTNode,parent_node:Crystal::ASTNode)-class-method","html_id":"of(node:Crystal::ASTNode,parent_node:Crystal::ASTNode)-class-method","name":"of","doc":"Constructs a new branch based on the node some parent scope.\n\n```\nBranch.of(assign_node, def_node)\n```","summary":"<p>Constructs a new branch based on the node some parent scope.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ASTNode"},{"name":"parent_node","doc":null,"default_value":"","external_name":"parent_node","restriction":"Crystal::ASTNode"}],"args_string":"(node : Crystal::ASTNode, parent_node : Crystal::ASTNode)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branch.cr#L65","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branch.cr#L65","def":{"name":"of","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ASTNode"},{"name":"parent_node","doc":null,"default_value":"","external_name":"parent_node","restriction":"Crystal::ASTNode"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(BranchVisitor.new(node)).tap(&.accept(parent_node)).branch"}},{"id":"of(node:Crystal::ASTNode,scope:Scope)-class-method","html_id":"of(node:Crystal::ASTNode,scope:Scope)-class-method","name":"of","doc":"Constructs a new branch based on the node in scope.\n\n```\nBranch.of(assign_node, scope)\n```","summary":"<p>Constructs a new branch based on the node in scope.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ASTNode"},{"name":"scope","doc":null,"default_value":"","external_name":"scope","restriction":"Scope"}],"args_string":"(node : Crystal::ASTNode, scope : Scope)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branch.cr#L56","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branch.cr#L56","def":{"name":"of","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ASTNode"},{"name":"scope","doc":null,"default_value":"","external_name":"scope","restriction":"Scope"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"of(node, scope.node)"}}],"constructors":[{"id":"new(node,parent)-class-method","html_id":"new(node,parent)-class-method","name":"new","doc":"Creates a new branch.\n\n```\nBranch.new(if_node)\n```","summary":"<p>Creates a new branch.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""},{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":""}],"args_string":"(node, parent)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branch.cr#L32","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branch.cr#L32","def":{"name":"new","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""},{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(node, parent)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"==(other:self)-instance-method","html_id":"==(other:self)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : self)","source_link":null,"source_link":null,"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if node == other.node\nelse\n  return false\nend\nif location == other.location\nelse\n  return false\nend\ntrue\n"}},{"id":"hash(hasher)-instance-method","html_id":"hash(hasher)-instance-method","name":"hash","doc":null,"summary":null,"abstract":false,"args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"args_string":"(hasher)","source_link":null,"source_link":null,"def":{"name":"hash","args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"hasher = node.hash(hasher)\nhasher = location.hash(hasher)\nhasher\n"}},{"id":"in_loop?-instance-method","html_id":"in_loop?-instance-method","name":"in_loop?","doc":"Returns true if current branch is in a loop, false - otherwise.\nFor example, this branch is in a loop:\n\n```\nwhile true\n  handle_input # this branch is in a loop\n  if wrong_input\n    show_message # this branch is also in a loop.\n  end\nend\n```\n","summary":"<p>Returns true if current branch is in a loop, false - otherwise.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branch.cr#L47","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branch.cr#L47","def":{"name":"in_loop?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@parent.loop?"}},{"id":"location(*args,**options)-instance-method","html_id":"location(*args,**options)-instance-method","name":"location","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branch.cr#L23","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branch.cr#L23","def":{"name":"location","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@node.location(*args, **options)"}},{"id":"location(*args,**options,&block)-instance-method","html_id":"location(*args,**options,&amp;block)-instance-method","name":"location","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branch.cr#L23","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branch.cr#L23","def":{"name":"location","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@node.location(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"node:Crystal::ASTNode-instance-method","html_id":"node:Crystal::ASTNode-instance-method","name":"node","doc":"The actual branch node.","summary":"<p>The actual branch node.</p>","abstract":false,"args":[],"args_string":" : Crystal::ASTNode","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branch.cr#L17","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branch.cr#L17","def":{"name":"node","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crystal::ASTNode","visibility":"Public","body":"@node"}},{"id":"parent:Branchable-instance-method","html_id":"parent:Branchable-instance-method","name":"parent","doc":"The parent branchable.","summary":"<p>The parent branchable.</p>","abstract":false,"args":[],"args_string":" : Branchable","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branch.cr#L20","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branch.cr#L20","def":{"name":"parent","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Branchable","visibility":"Public","body":"@parent"}},{"id":"to_s(*args,**options)-instance-method","html_id":"to_s(*args,**options)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branch.cr#L22","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branch.cr#L22","def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@node.to_s(*args, **options)"}},{"id":"to_s(*args,**options,&block)-instance-method","html_id":"to_s(*args,**options,&amp;block)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branch.cr#L22","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branch.cr#L22","def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@node.to_s(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/AST/Branchable","path":"Ameba/AST/Branchable.html","kind":"class","full_name":"Ameba::AST::Branchable","name":"Branchable","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/ast/branchable.cr","line_number":13,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branchable.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/AST","kind":"module","full_name":"Ameba::AST","name":"AST"},"doc":"A generic entity to represent a branchable Crystal node.\nFor example, `Crystal::If`, `Crystal::Unless`, `Crystal::While`\nare branchable.\n\n```\nwhite a > 100 # Branchable A\n  if b > 2    # Branchable B\n    a += 1\n  end\nend\n```","summary":"<p>A generic entity to represent a branchable Crystal node.</p>","class_methods":[],"constructors":[{"id":"new(node,parent=nil)-class-method","html_id":"new(node,parent=nil)-class-method","name":"new","doc":"Creates a new branchable\n\n```\nBranchable.new(node, parent_branchable)\n```","summary":"<p>Creates a new branchable</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""},{"name":"parent","doc":null,"default_value":"nil","external_name":"parent","restriction":""}],"args_string":"(node, parent = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branchable.cr#L30","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branchable.cr#L30","def":{"name":"new","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""},{"name":"parent","doc":null,"default_value":"nil","external_name":"parent","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(node, parent)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"branches:Array(Crystal::ASTNode)-instance-method","html_id":"branches:Array(Crystal::ASTNode)-instance-method","name":"branches","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Crystal::ASTNode)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branchable.cr#L14","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branchable.cr#L14","def":{"name":"branches","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@branches"}},{"id":"location(*args,**options)-instance-method","html_id":"location(*args,**options)-instance-method","name":"location","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branchable.cr#L23","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branchable.cr#L23","def":{"name":"location","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@node.location(*args, **options)"}},{"id":"location(*args,**options,&block)-instance-method","html_id":"location(*args,**options,&amp;block)-instance-method","name":"location","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branchable.cr#L23","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branchable.cr#L23","def":{"name":"location","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@node.location(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"loop?-instance-method","html_id":"loop?-instance-method","name":"loop?","doc":"Returns true if this node or one of the parent branchables is a loop, false otherwise.","summary":"<p>Returns true if this node or one of the parent branchables is a loop, false otherwise.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branchable.cr#L34","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branchable.cr#L34","def":{"name":"loop?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ((node.is_a?(Crystal::While)) || (node.is_a?(Crystal::Until))) || (((n = node) && (n.is_a?(Crystal::Call))) && (n.name == \"loop\"))\n  return true\nend\nparent.try(&.loop?) || false\n"}},{"id":"node:Crystal::ASTNode-instance-method","html_id":"node:Crystal::ASTNode-instance-method","name":"node","doc":"The actual Crystal node.","summary":"<p>The actual Crystal node.</p>","abstract":false,"args":[],"args_string":" : Crystal::ASTNode","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branchable.cr#L17","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branchable.cr#L17","def":{"name":"node","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crystal::ASTNode","visibility":"Public","body":"@node"}},{"id":"parent:Branchable?-instance-method","html_id":"parent:Branchable?-instance-method","name":"parent","doc":"Parent branchable (if any)","summary":"<p>Parent branchable (if any)</p>","abstract":false,"args":[],"args_string":" : Branchable?","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branchable.cr#L20","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branchable.cr#L20","def":{"name":"parent","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Branchable | ::Nil","visibility":"Public","body":"@parent"}},{"id":"to_s(*args,**options)-instance-method","html_id":"to_s(*args,**options)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branchable.cr#L22","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branchable.cr#L22","def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@node.to_s(*args, **options)"}},{"id":"to_s(*args,**options,&block)-instance-method","html_id":"to_s(*args,**options,&amp;block)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branchable.cr#L22","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/branchable.cr#L22","def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@node.to_s(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/AST/NodeVisitor","path":"Ameba/AST/NodeVisitor.html","kind":"class","full_name":"Ameba::AST::NodeVisitor","name":"NodeVisitor","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/AST/BaseVisitor","kind":"class","full_name":"Ameba::AST::BaseVisitor","name":"BaseVisitor"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/AST/BaseVisitor","kind":"class","full_name":"Ameba::AST::BaseVisitor","name":"BaseVisitor"},{"html_id":"github.com/veelenga/ameba/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/ast/visitors/node_visitor.cr","line_number":36,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/AST","kind":"module","full_name":"Ameba::AST","name":"AST"},"doc":"An AST Visitor that traverses the source and allows all nodes\nto be inspected by rules.\n\n```\nvisitor = Ameba::AST::NodeVisitor.new(rule, source)\n```\n","summary":"<p>An AST Visitor that traverses the source and allows all nodes to be inspected by rules.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"visit(node:Crystal::Alias)-instance-method","html_id":"visit(node:Crystal::Alias)-instance-method","name":"visit","doc":"A visit callback for `Crystal::Alias` node.\nReturns true meaning that child nodes will be traversed as well.","summary":"<p>A visit callback for <code>Crystal::Alias</code> node.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Alias"}],"args_string":"(node : Crystal::Alias)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Alias"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rule.test(@source, node)\ntrue\n"}},{"id":"visit(node:Crystal::When)-instance-method","html_id":"visit(node:Crystal::When)-instance-method","name":"visit","doc":"A visit callback for `Crystal::When` node.\nReturns true meaning that child nodes will be traversed as well.","summary":"<p>A visit callback for <code>Crystal::When</code> node.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::When"}],"args_string":"(node : Crystal::When)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::When"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rule.test(@source, node)\ntrue\n"}},{"id":"visit(node:Crystal::Var)-instance-method","html_id":"visit(node:Crystal::Var)-instance-method","name":"visit","doc":"A visit callback for `Crystal::Var` node.\nReturns true meaning that child nodes will be traversed as well.","summary":"<p>A visit callback for <code>Crystal::Var</code> node.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Var"}],"args_string":"(node : Crystal::Var)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Var"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rule.test(@source, node)\ntrue\n"}},{"id":"visit(node:Crystal::Unless)-instance-method","html_id":"visit(node:Crystal::Unless)-instance-method","name":"visit","doc":"A visit callback for `Crystal::Unless` node.\nReturns true meaning that child nodes will be traversed as well.","summary":"<p>A visit callback for <code>Crystal::Unless</code> node.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Unless"}],"args_string":"(node : Crystal::Unless)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Unless"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rule.test(@source, node)\ntrue\n"}},{"id":"visit(node:Crystal::StringInterpolation)-instance-method","html_id":"visit(node:Crystal::StringInterpolation)-instance-method","name":"visit","doc":"A visit callback for `Crystal::StringInterpolation` node.\nReturns true meaning that child nodes will be traversed as well.","summary":"<p>A visit callback for <code>Crystal::StringInterpolation</code> node.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::StringInterpolation"}],"args_string":"(node : Crystal::StringInterpolation)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::StringInterpolation"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rule.test(@source, node)\ntrue\n"}},{"id":"visit(node:Crystal::NilLiteral)-instance-method","html_id":"visit(node:Crystal::NilLiteral)-instance-method","name":"visit","doc":"A visit callback for `Crystal::NilLiteral` node.\nReturns true meaning that child nodes will be traversed as well.","summary":"<p>A visit callback for <code>Crystal::NilLiteral</code> node.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::NilLiteral"}],"args_string":"(node : Crystal::NilLiteral)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::NilLiteral"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rule.test(@source, node)\ntrue\n"}},{"id":"visit(node:Crystal::ModuleDef)-instance-method","html_id":"visit(node:Crystal::ModuleDef)-instance-method","name":"visit","doc":"A visit callback for `Crystal::ModuleDef` node.\nReturns true meaning that child nodes will be traversed as well.","summary":"<p>A visit callback for <code>Crystal::ModuleDef</code> node.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ModuleDef"}],"args_string":"(node : Crystal::ModuleDef)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ModuleDef"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rule.test(@source, node)\ntrue\n"}},{"id":"visit(node:Crystal::LibDef)-instance-method","html_id":"visit(node:Crystal::LibDef)-instance-method","name":"visit","doc":"A visit callback for `Crystal::LibDef` node.\nReturns true meaning that child nodes will be traversed as well.","summary":"<p>A visit callback for <code>Crystal::LibDef</code> node.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::LibDef"}],"args_string":"(node : Crystal::LibDef)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::LibDef"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rule.test(@source, node)\ntrue\n"}},{"id":"visit(node:Crystal::InstanceVar)-instance-method","html_id":"visit(node:Crystal::InstanceVar)-instance-method","name":"visit","doc":"A visit callback for `Crystal::InstanceVar` node.\nReturns true meaning that child nodes will be traversed as well.","summary":"<p>A visit callback for <code>Crystal::InstanceVar</code> node.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::InstanceVar"}],"args_string":"(node : Crystal::InstanceVar)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::InstanceVar"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rule.test(@source, node)\ntrue\n"}},{"id":"visit(node:Crystal::If)-instance-method","html_id":"visit(node:Crystal::If)-instance-method","name":"visit","doc":"A visit callback for `Crystal::If` node.\nReturns true meaning that child nodes will be traversed as well.","summary":"<p>A visit callback for <code>Crystal::If</code> node.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::If"}],"args_string":"(node : Crystal::If)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::If"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rule.test(@source, node)\ntrue\n"}},{"id":"visit(node:Crystal::HashLiteral)-instance-method","html_id":"visit(node:Crystal::HashLiteral)-instance-method","name":"visit","doc":"A visit callback for `Crystal::HashLiteral` node.\nReturns true meaning that child nodes will be traversed as well.","summary":"<p>A visit callback for <code>Crystal::HashLiteral</code> node.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::HashLiteral"}],"args_string":"(node : Crystal::HashLiteral)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::HashLiteral"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rule.test(@source, node)\ntrue\n"}},{"id":"visit(node:Crystal::Expressions)-instance-method","html_id":"visit(node:Crystal::Expressions)-instance-method","name":"visit","doc":"A visit callback for `Crystal::Expressions` node.\nReturns true meaning that child nodes will be traversed as well.","summary":"<p>A visit callback for <code>Crystal::Expressions</code> node.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Expressions"}],"args_string":"(node : Crystal::Expressions)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Expressions"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rule.test(@source, node)\ntrue\n"}},{"id":"visit(node:Crystal::ExceptionHandler)-instance-method","html_id":"visit(node:Crystal::ExceptionHandler)-instance-method","name":"visit","doc":"A visit callback for `Crystal::ExceptionHandler` node.\nReturns true meaning that child nodes will be traversed as well.","summary":"<p>A visit callback for <code>Crystal::ExceptionHandler</code> node.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ExceptionHandler"}],"args_string":"(node : Crystal::ExceptionHandler)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ExceptionHandler"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rule.test(@source, node)\ntrue\n"}},{"id":"visit(node:Crystal::EnumDef)-instance-method","html_id":"visit(node:Crystal::EnumDef)-instance-method","name":"visit","doc":"A visit callback for `Crystal::EnumDef` node.\nReturns true meaning that child nodes will be traversed as well.","summary":"<p>A visit callback for <code>Crystal::EnumDef</code> node.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::EnumDef"}],"args_string":"(node : Crystal::EnumDef)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::EnumDef"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rule.test(@source, node)\ntrue\n"}},{"id":"visit(node:Crystal::Def)-instance-method","html_id":"visit(node:Crystal::Def)-instance-method","name":"visit","doc":"A visit callback for `Crystal::Def` node.\nReturns true meaning that child nodes will be traversed as well.","summary":"<p>A visit callback for <code>Crystal::Def</code> node.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Def"}],"args_string":"(node : Crystal::Def)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Def"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rule.test(@source, node)\ntrue\n"}},{"id":"visit(node:Crystal::ClassVar)-instance-method","html_id":"visit(node:Crystal::ClassVar)-instance-method","name":"visit","doc":"A visit callback for `Crystal::ClassVar` node.\nReturns true meaning that child nodes will be traversed as well.","summary":"<p>A visit callback for <code>Crystal::ClassVar</code> node.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ClassVar"}],"args_string":"(node : Crystal::ClassVar)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ClassVar"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rule.test(@source, node)\ntrue\n"}},{"id":"visit(node:Crystal::ClassDef)-instance-method","html_id":"visit(node:Crystal::ClassDef)-instance-method","name":"visit","doc":"A visit callback for `Crystal::ClassDef` node.\nReturns true meaning that child nodes will be traversed as well.","summary":"<p>A visit callback for <code>Crystal::ClassDef</code> node.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ClassDef"}],"args_string":"(node : Crystal::ClassDef)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ClassDef"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rule.test(@source, node)\ntrue\n"}},{"id":"visit(node:Crystal::Case)-instance-method","html_id":"visit(node:Crystal::Case)-instance-method","name":"visit","doc":"A visit callback for `Crystal::Case` node.\nReturns true meaning that child nodes will be traversed as well.","summary":"<p>A visit callback for <code><a href=\"../../Crystal/Case.html\">Crystal::Case</a></code> node.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Case"}],"args_string":"(node : Crystal::Case)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Case"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rule.test(@source, node)\ntrue\n"}},{"id":"visit(node:Crystal::Call)-instance-method","html_id":"visit(node:Crystal::Call)-instance-method","name":"visit","doc":"A visit callback for `Crystal::Call` node.\nReturns true meaning that child nodes will be traversed as well.","summary":"<p>A visit callback for <code>Crystal::Call</code> node.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Call"}],"args_string":"(node : Crystal::Call)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Call"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rule.test(@source, node)\ntrue\n"}},{"id":"visit(node:Crystal::Assign)-instance-method","html_id":"visit(node:Crystal::Assign)-instance-method","name":"visit","doc":"A visit callback for `Crystal::Assign` node.\nReturns true meaning that child nodes will be traversed as well.","summary":"<p>A visit callback for <code>Crystal::Assign</code> node.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Assign"}],"args_string":"(node : Crystal::Assign)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Assign"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rule.test(@source, node)\ntrue\n"}},{"id":"visit(node:Crystal::While)-instance-method","html_id":"visit(node:Crystal::While)-instance-method","name":"visit","doc":"A visit callback for `Crystal::While` node.\nReturns true meaning that child nodes will be traversed as well.","summary":"<p>A visit callback for <code>Crystal::While</code> node.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::While"}],"args_string":"(node : Crystal::While)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/node_visitor.cr#L37","def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::While"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rule.test(@source, node)\ntrue\n"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/AST/Reference","path":"Ameba/AST/Reference.html","kind":"class","full_name":"Ameba::AST::Reference","name":"Reference","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/AST/Variable","kind":"class","full_name":"Ameba::AST::Variable","name":"Variable"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/AST/Variable","kind":"class","full_name":"Ameba::AST::Variable","name":"Variable"},{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/ast/variabling/reference.cr","line_number":7,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/reference.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/AST","kind":"module","full_name":"Ameba::AST","name":"AST"},"doc":"Represents a reference to the variable.\nIt behaves like a variable is used to distinguish a\nthe variable from its reference.","summary":"<p>Represents a reference to the variable.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"explicit=(explicit)-instance-method","html_id":"explicit=(explicit)-instance-method","name":"explicit=","doc":null,"summary":null,"abstract":false,"args":[{"name":"explicit","doc":null,"default_value":"","external_name":"explicit","restriction":""}],"args_string":"(explicit)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/reference.cr#L8","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/reference.cr#L8","def":{"name":"explicit=","args":[{"name":"explicit","doc":null,"default_value":"","external_name":"explicit","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@explicit = explicit"}},{"id":"explicit?:Bool-instance-method","html_id":"explicit?:Bool-instance-method","name":"explicit?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/reference.cr#L8","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/reference.cr#L8","def":{"name":"explicit?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@explicit"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/AST/Scope","path":"Ameba/AST/Scope.html","kind":"class","full_name":"Ameba::AST::Scope","name":"Scope","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/ast/scope.cr","line_number":6,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/AST","kind":"module","full_name":"Ameba::AST","name":"AST"},"doc":"Represents a context of the local variable visibility.\nThis is where the local variables belong to.","summary":"<p>Represents a context of the local variable visibility.</p>","class_methods":[],"constructors":[{"id":"new(node,outer_scope=nil)-class-method","html_id":"new(node,outer_scope=nil)-class-method","name":"new","doc":"Creates a new scope. Accepts the AST node and the outer scope.\n\n```\nscope = Scope.new(class_node, nil)\n```","summary":"<p>Creates a new scope.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""},{"name":"outer_scope","doc":null,"default_value":"nil","external_name":"outer_scope","restriction":""}],"args_string":"(node, outer_scope = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L32","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L32","def":{"name":"new","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""},{"name":"outer_scope","doc":null,"default_value":"nil","external_name":"outer_scope","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(node, outer_scope)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"==(other:self)-instance-method","html_id":"==(other:self)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : self)","source_link":null,"source_link":null,"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if node == other.node\nelse\n  return false\nend\nif location == other.location\nelse\n  return false\nend\ntrue\n"}},{"id":"add_argument(node)-instance-method","html_id":"add_argument(node)-instance-method","name":"add_argument","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""}],"args_string":"(node)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L46","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L46","def":{"name":"add_argument","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_variable((Crystal::Var.new(node.name)).at(node.location))\narguments << (Argument.new(node, variables.last))\n"}},{"id":"add_variable(node)-instance-method","html_id":"add_variable(node)-instance-method","name":"add_variable","doc":"Creates a new variable in the current scope.\n\n```\nscope = Scope.new(class_node, nil)\nscope.add_variable(var_node)\n```","summary":"<p>Creates a new variable in the current scope.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""}],"args_string":"(node)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L42","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L42","def":{"name":"add_variable","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"variables << (Variable.new(node, self))"}},{"id":"arg?(var)-instance-method","html_id":"arg?(var)-instance-method","name":"arg?","doc":"Returns true if var is an argument in current scope, false if not.","summary":"<p>Returns true if var is an argument in current scope, false if not.</p>","abstract":false,"args":[{"name":"var","doc":null,"default_value":"","external_name":"var","restriction":""}],"args_string":"(var)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L102","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L102","def":{"name":"arg?","args":[{"name":"var","doc":null,"default_value":"","external_name":"var","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case current_node = node\nwhen Crystal::Def\n  (var.is_a?(Crystal::Arg)) && (any_arg?(current_node.args, var))\nwhen Crystal::Block\n  (var.is_a?(Crystal::Var)) && (any_arg?(current_node.args, var))\nwhen Crystal::ProcLiteral\n  (var.is_a?(Crystal::Var)) && (any_arg?(current_node.def.args, var))\nelse\n  false\nend"}},{"id":"arguments:Array(Ameba::AST::Argument)-instance-method","html_id":"arguments:Array(Ameba::AST::Argument)-instance-method","name":"arguments","doc":"Link to the arguments in current scope","summary":"<p>Link to the arguments in current scope</p>","abstract":false,"args":[],"args_string":" : Array(Ameba::AST::Argument)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L11","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L11","def":{"name":"arguments","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@arguments"}},{"id":"assign_variable(node)-instance-method","html_id":"assign_variable(node)-instance-method","name":"assign_variable","doc":"Creates a new assignment for the variable.\n\n```\nscope = Scope.new(class_node, nil)\nscope.assign_variable(var_node)\n```","summary":"<p>Creates a new assignment for the variable.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""}],"args_string":"(node)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L67","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L67","def":{"name":"assign_variable","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(node.is_a?(Crystal::Var)) && (find_variable(node.name)).try(&.assign(node))"}},{"id":"block?-instance-method","html_id":"block?-instance-method","name":"block?","doc":"Returns true if current scope represents a block (or proc),\nfalse if not.","summary":"<p>Returns true if current scope represents a block (or proc), false if not.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L73","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L73","def":{"name":"block?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(node.is_a?(Crystal::Block)) || (node.is_a?(Crystal::ProcLiteral))"}},{"id":"def?-instance-method","html_id":"def?-instance-method","name":"def?","doc":"Returns true if current scope is a def, false if not.","summary":"<p>Returns true if current scope is a def, false if not.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L97","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L97","def":{"name":"def?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node.is_a?(Crystal::Def)"}},{"id":"eql?(node)-instance-method","html_id":"eql?(node)-instance-method","name":"eql?","doc":"Returns true if the `node` represents exactly\nthe same Crystal node as `@node`.","summary":"<p>Returns true if the <code><a href=\"../../Ameba/AST/Scope.html#node%3ACrystal%3A%3AASTNode-instance-method\">#node</a></code> represents exactly the same Crystal node as <code>@node</code>.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""}],"args_string":"(node)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L121","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L121","def":{"name":"eql?","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((node == @node) && (!(node.location.nil?))) && (node.location == @node.location)"}},{"id":"find_variable(name:String)-instance-method","html_id":"find_variable(name:String)-instance-method","name":"find_variable","doc":"Returns variable by its name or nil if it does not exist.\n\n```\nscope = Scope.new(class_node, nil)\nscope.find_variable(\"foo\")\n```","summary":"<p>Returns variable by its name or nil if it does not exist.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L57","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L57","def":{"name":"find_variable","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"variables.find do |v|\n  v.name == name\nend || outer_scope.try(&.find_variable(name))"}},{"id":"hash(hasher)-instance-method","html_id":"hash(hasher)-instance-method","name":"hash","doc":null,"summary":null,"abstract":false,"args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"args_string":"(hasher)","source_link":null,"source_link":null,"def":{"name":"hash","args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"hasher = node.hash(hasher)\nhasher = location.hash(hasher)\nhasher\n"}},{"id":"inner_scopes:Array(Ameba::AST::Scope)-instance-method","html_id":"inner_scopes:Array(Ameba::AST::Scope)-instance-method","name":"inner_scopes","doc":"List of inner scopes","summary":"<p>List of inner scopes</p>","abstract":false,"args":[],"args_string":" : Array(Ameba::AST::Scope)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L17","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L17","def":{"name":"inner_scopes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@inner_scopes"}},{"id":"location(*args,**options,&block)-instance-method","html_id":"location(*args,**options,&amp;block)-instance-method","name":"location","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L23","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L23","def":{"name":"location","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"node.location(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"location(*args,**options)-instance-method","html_id":"location(*args,**options)-instance-method","name":"location","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L23","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L23","def":{"name":"location","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node.location(*args, **options)"}},{"id":"node:Crystal::ASTNode-instance-method","html_id":"node:Crystal::ASTNode-instance-method","name":"node","doc":"The actual AST node that represents a current scope.","summary":"<p>The actual AST node that represents a current scope.</p>","abstract":false,"args":[],"args_string":" : Crystal::ASTNode","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L20","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L20","def":{"name":"node","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crystal::ASTNode","visibility":"Public","body":"@node"}},{"id":"outer_scope:Scope?-instance-method","html_id":"outer_scope:Scope?-instance-method","name":"outer_scope","doc":"Link to the outer scope","summary":"<p>Link to the outer scope</p>","abstract":false,"args":[],"args_string":" : Scope?","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L14","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L14","def":{"name":"outer_scope","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Scope | ::Nil","visibility":"Public","body":"@outer_scope"}},{"id":"references?(variable:Variable)-instance-method","html_id":"references?(variable:Variable)-instance-method","name":"references?","doc":"Returns true if current scope (or any of inner scopes) references variable,\nfalse if not.","summary":"<p>Returns true if current scope (or any of inner scopes) references variable, false if not.</p>","abstract":false,"args":[{"name":"variable","doc":null,"default_value":"","external_name":"variable","restriction":"Variable"}],"args_string":"(variable : Variable)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L90","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L90","def":{"name":"references?","args":[{"name":"variable","doc":null,"default_value":"","external_name":"variable","restriction":"Variable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"variable.references.any? do |reference|\n  (reference.scope == self) || inner_scopes.any?(&.references?(variable))\nend"}},{"id":"to_s(*args,**options,&block)-instance-method","html_id":"to_s(*args,**options,&amp;block)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L22","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L22","def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"node.to_s(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"to_s(*args,**options)-instance-method","html_id":"to_s(*args,**options)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L22","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L22","def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node.to_s(*args, **options)"}},{"id":"type_definition?-instance-method","html_id":"type_definition?-instance-method","name":"type_definition?","doc":"Returns true if and only if current scope represents some\ntype definition, for example a class.","summary":"<p>Returns true if and only if current scope represents some type definition, for example a class.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L79","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L79","def":{"name":"type_definition?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(((((node.is_a?(Crystal::ClassDef)) || (node.is_a?(Crystal::ModuleDef))) || (node.is_a?(Crystal::LibDef))) || (node.is_a?(Crystal::FunDef))) || (node.is_a?(Crystal::TypeDef))) || (node.is_a?(Crystal::CStructOrUnionDef))"}},{"id":"variables:Array(Ameba::AST::Variable)-instance-method","html_id":"variables:Array(Ameba::AST::Variable)-instance-method","name":"variables","doc":"Link to local variables","summary":"<p>Link to local variables</p>","abstract":false,"args":[],"args_string":" : Array(Ameba::AST::Variable)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L8","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/scope.cr#L8","def":{"name":"variables","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@variables"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/AST/ScopeVisitor","path":"Ameba/AST/ScopeVisitor.html","kind":"class","full_name":"Ameba::AST::ScopeVisitor","name":"ScopeVisitor","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/AST/BaseVisitor","kind":"class","full_name":"Ameba::AST::BaseVisitor","name":"BaseVisitor"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/AST/BaseVisitor","kind":"class","full_name":"Ameba::AST::BaseVisitor","name":"BaseVisitor"},{"html_id":"github.com/veelenga/ameba/Crystal/Visitor","kind":"class","full_name":"Crystal::Visitor","name":"Visitor"},{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/ast/visitors/scope_visitor.cr","line_number":5,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/scope_visitor.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/AST","kind":"module","full_name":"Ameba::AST","name":"AST"},"doc":"AST Visitor that traverses the source and constructs scopes.","summary":"<p>AST Visitor that traverses the source and constructs scopes.</p>","class_methods":[],"constructors":[{"id":"new(rule,source)-class-method","html_id":"new(rule,source)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rule","doc":null,"default_value":"","external_name":"rule","restriction":""},{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(rule, source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/scope_visitor.cr#L8","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/visitors/scope_visitor.cr#L8","def":{"name":"new","args":[{"name":"rule","doc":null,"default_value":"","external_name":"rule","restriction":""},{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(rule, source)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/AST/Util","path":"Ameba/AST/Util.html","kind":"module","full_name":"Ameba::AST::Util","name":"Util","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"ameba/ast/util.cr","line_number":2,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/util.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/veelenga/ameba/Ameba/Rule/EmptyExpression","kind":"struct","full_name":"Ameba::Rule::EmptyExpression","name":"EmptyExpression"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/LiteralInCondition","kind":"struct","full_name":"Ameba::Rule::LiteralInCondition","name":"LiteralInCondition"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/LiteralInInterpolation","kind":"struct","full_name":"Ameba::Rule::LiteralInInterpolation","name":"LiteralInInterpolation"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/RedundantBegin","kind":"struct","full_name":"Ameba::Rule::RedundantBegin","name":"RedundantBegin"}],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/AST","kind":"module","full_name":"Ameba::AST","name":"AST"},"doc":"Utility module for Ameba's rules.","summary":"<p>Utility module for Ameba's rules.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"exception_handler?(node)-instance-method","html_id":"exception_handler?(node)-instance-method","name":"exception_handler?","doc":"Returns true if current `node` is an exception handler, false otherwise.","summary":"<p>Returns true if current <code>node</code> is an exception handler, false otherwise.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""}],"args_string":"(node)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/util.cr#L14","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/util.cr#L14","def":{"name":"exception_handler?","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node.is_a?(Crystal::ExceptionHandler)"}},{"id":"literal?(node)-instance-method","html_id":"literal?(node)-instance-method","name":"literal?","doc":"Returns true if current `node` is a literal, false otherwise.","summary":"<p>Returns true if current <code>node</code> is a literal, false otherwise.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""}],"args_string":"(node)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/util.cr#L4","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/util.cr#L4","def":{"name":"literal?","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node.try do |__arg0|\n  __arg0.class.name.ends_with?(\"Literal\")\nend"}},{"id":"node_source(node,code_lines)-instance-method","html_id":"node_source(node,code_lines)-instance-method","name":"node_source","doc":"Returns a source code for the current node.\nThis method uses `node.location` and `node.end_location`\nto determine and cut a piece of source of the node.","summary":"<p>Returns a source code for the current node.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""},{"name":"code_lines","doc":null,"default_value":"","external_name":"code_lines","restriction":""}],"args_string":"(node, code_lines)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/util.cr#L21","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/util.cr#L21","def":{"name":"node_source","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""},{"name":"code_lines","doc":null,"default_value":"","external_name":"code_lines","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"loc, end_loc = node.location, node.end_location\nif loc && end_loc\nelse\n  return\nend\nline, column = loc.line_number - 1, loc.column_number - 1\nend_line, end_column = end_loc.line_number - 1, end_loc.column_number - 1\nnode_lines = code_lines[line..end_line]\nfirst_line, last_line = node_lines[0]?, node_lines[-1]?\nif first_line && last_line\nelse\n  return\nend\nnode_lines[0] = first_line.sub(0...column, \"\")\nif line == end_line\n  end_column = end_column - column\n  last_line = node_lines[0]\nend\nnode_lines[-1] = last_line.sub((end_column + 1)...last_line.size, \"\")\nnode_lines\n"}},{"id":"string_literal?(node)-instance-method","html_id":"string_literal?(node)-instance-method","name":"string_literal?","doc":"Returns true if current `node` is a string literal, false otherwise.","summary":"<p>Returns true if current <code>node</code> is a string literal, false otherwise.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""}],"args_string":"(node)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/util.cr#L9","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/util.cr#L9","def":{"name":"string_literal?","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node.is_a?(Crystal::StringLiteral)"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/AST/Variable","path":"Ameba/AST/Variable.html","kind":"class","full_name":"Ameba::AST::Variable","name":"Variable","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/ast/variabling/variable.cr","line_number":4,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/veelenga/ameba/Ameba/AST/Reference","kind":"class","full_name":"Ameba::AST::Reference","name":"Reference"}],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/AST","kind":"module","full_name":"Ameba::AST","name":"AST"},"doc":"Represents the existence of the local variable.\nHolds the var node and variable assigments.","summary":"<p>Represents the existence of the local variable.</p>","class_methods":[],"constructors":[{"id":"new(node,scope)-class-method","html_id":"new(node,scope)-class-method","name":"new","doc":"Creates a new variable(in the scope).\n\n```\nVariable.new(node, scope)\n```\n","summary":"<p>Creates a new variable(in the scope).</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""},{"name":"scope","doc":null,"default_value":"","external_name":"scope","restriction":""}],"args_string":"(node, scope)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L27","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L27","def":{"name":"new","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""},{"name":"scope","doc":null,"default_value":"","external_name":"scope","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(node, scope)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"assign(node)-instance-method","html_id":"assign(node)-instance-method","name":"assign","doc":"Assigns the variable (creates a new assignment).\nVariable may have multiple assignments.\n\n```\nvariable = Variable.new(node, scope)\nvariable.assign(node1)\nvariable.assign(node2)\nvariable.assignment.size # => 2\n```\n","summary":"<p>Assigns the variable (creates a new assignment).</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""}],"args_string":"(node)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L45","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L45","def":{"name":"assign","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"assignments << (Assignment.new(node, self))"}},{"id":"assignments:Array(Ameba::AST::Assignment)-instance-method","html_id":"assignments:Array(Ameba::AST::Assignment)-instance-method","name":"assignments","doc":"List of the assigments of this variable.","summary":"<p>List of the assigments of this variable.</p>","abstract":false,"args":[],"args_string":" : Array(Ameba::AST::Assignment)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L6","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L6","def":{"name":"assignments","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@assignments"}},{"id":"captured_by_block?(scope=@scope)-instance-method","html_id":"captured_by_block?(scope=@scope)-instance-method","name":"captured_by_block?","doc":"Returns true if the current var is referenced in\nin the block. For example this variable is captured\nby block:\n\n```\na = 1\n3.times { |i| a = a + i }\n```\n\nAnd this variable is not captured by block.\n\n```\ni = 1\n3.times { |i| i + 1 }\n```","summary":"<p>Returns true if the current var is referenced in in the block.</p>","abstract":false,"args":[{"name":"scope","doc":null,"default_value":"@scope","external_name":"scope","restriction":""}],"args_string":"(scope = @scope)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L107","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L107","def":{"name":"captured_by_block?","args":[{"name":"scope","doc":null,"default_value":"@scope","external_name":"scope","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"scope.inner_scopes.each do |inner_scope|\n  if inner_scope.block? && (inner_scope.references?(self))\n    return true\n  end\n  if captured_by_block?(inner_scope)\n    return true\n  end\nend\nfalse\n"}},{"id":"eql?(node)-instance-method","html_id":"eql?(node)-instance-method","name":"eql?","doc":"Returns true if the `node` represents exactly\nthe same Crystal node as `@node`.","summary":"<p>Returns true if the <code><a href=\"../../Ameba/AST/Variable.html#node%3ACrystal%3A%3AVar-instance-method\">#node</a></code> represents exactly the same Crystal node as <code>@node</code>.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""}],"args_string":"(node)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L140","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L140","def":{"name":"eql?","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((node.is_a?(Crystal::Var)) && (node.name == @node.name)) && (node.location == @node.location)"}},{"id":"location(*args,**options)-instance-method","html_id":"location(*args,**options)-instance-method","name":"location","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L17","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L17","def":{"name":"location","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@node.location(*args, **options)"}},{"id":"location(*args,**options,&block)-instance-method","html_id":"location(*args,**options,&amp;block)-instance-method","name":"location","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L17","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L17","def":{"name":"location","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@node.location(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"name(*args,**options)-instance-method","html_id":"name(*args,**options)-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L18","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L18","def":{"name":"name","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@node.name(*args, **options)"}},{"id":"name(*args,**options,&block)-instance-method","html_id":"name(*args,**options,&amp;block)-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L18","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L18","def":{"name":"name","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@node.name(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"node:Crystal::Var-instance-method","html_id":"node:Crystal::Var-instance-method","name":"node","doc":"The actual var node.","summary":"<p>The actual var node.</p>","abstract":false,"args":[],"args_string":" : Crystal::Var","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L12","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L12","def":{"name":"node","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crystal::Var","visibility":"Public","body":"@node"}},{"id":"reference(node:Crystal::Var,scope:Scope)-instance-method","html_id":"reference(node:Crystal::Var,scope:Scope)-instance-method","name":"reference","doc":"Creates a reference to this variable in some scope.\n\n```\nvariable = Variable.new(node, scope)\nvariable.reference(var_node, some_scope)\n```\n","summary":"<p>Creates a reference to this variable in some scope.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Var"},{"name":"scope","doc":null,"default_value":"","external_name":"scope","restriction":"Scope"}],"args_string":"(node : Crystal::Var, scope : Scope)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L67","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L67","def":{"name":"reference","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Var"},{"name":"scope","doc":null,"default_value":"","external_name":"scope","restriction":"Scope"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(Reference.new(node, scope)).tap do |reference|\n  references << reference\nend"}},{"id":"reference_assignments!-instance-method","html_id":"reference_assignments!-instance-method","name":"reference_assignments!","doc":"Reference variable's assignments.\n\n```\nvariable = Variable.new(node, scope)\nvariable.assign(assign_node)\nvariable.reference_assignments!\n```","summary":"<p>Reference variable's assignments.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L80","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L80","def":{"name":"reference_assignments!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"consumed_branches = Set(Branch).new\nassignments.reverse_each do |assignment|\n  if consumed_branches.includes?(assignment.branch)\n    next\n  end\n  assignment.referenced = true\n  if assignment.branch\n  else\n    break\n  end\n  consumed_branches << assignment.branch.not_nil!\nend\n"}},{"id":"referenced?-instance-method","html_id":"referenced?-instance-method","name":"referenced?","doc":"Returns true if variable has any reference.\n\n```\nvariable = Variable.new(node, scope)\nvariable.reference(var_node)\nvariable.referenced? # => true\n```","summary":"<p>Returns true if variable has any reference.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L56","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L56","def":{"name":"referenced?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"references.any?"}},{"id":"references:Array(Ameba::AST::Reference)-instance-method","html_id":"references:Array(Ameba::AST::Reference)-instance-method","name":"references","doc":"List of the references of this variable.","summary":"<p>List of the references of this variable.</p>","abstract":false,"args":[],"args_string":" : Array(Ameba::AST::Reference)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L9","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L9","def":{"name":"references","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@references"}},{"id":"scope:Scope-instance-method","html_id":"scope:Scope-instance-method","name":"scope","doc":"Scope of this variable.","summary":"<p>Scope of this variable.</p>","abstract":false,"args":[],"args_string":" : Scope","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L15","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L15","def":{"name":"scope","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Scope","visibility":"Public","body":"@scope"}},{"id":"special?-instance-method","html_id":"special?-instance-method","name":"special?","doc":"Returns true if it is a special variable, i.e `$?`.","summary":"<p>Returns true if it is a special variable, i.e <code>$?</code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L31","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L31","def":{"name":"special?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@node.special_var?"}},{"id":"target_of?(assign)-instance-method","html_id":"target_of?(assign)-instance-method","name":"target_of?","doc":"Returns true if the variable is a target (on the left) of the assignment,\nfalse otherwise.","summary":"<p>Returns true if the variable is a target (on the left) of the assignment, false otherwise.</p>","abstract":false,"args":[{"name":"assign","doc":null,"default_value":"","external_name":"assign","restriction":""}],"args_string":"(assign)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L128","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L128","def":{"name":"target_of?","args":[{"name":"assign","doc":null,"default_value":"","external_name":"assign","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case assign\nwhen Crystal::Assign\n  eql?(assign.target)\nwhen Crystal::OpAssign\n  eql?(assign.target)\nwhen Crystal::MultiAssign\n  assign.targets.any? do |t|\n    eql?(t)\n  end\nelse\n  false\nend"}},{"id":"to_s(*args,**options)-instance-method","html_id":"to_s(*args,**options)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L19","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L19","def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@node.to_s(*args, **options)"}},{"id":"to_s(*args,**options,&block)-instance-method","html_id":"to_s(*args,**options,&amp;block)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L19","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L19","def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@node.to_s(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"used_in_macro?(scope=@scope)-instance-method","html_id":"used_in_macro?(scope=@scope)-instance-method","name":"used_in_macro?","doc":"Returns true if current variable potentially referenced in a macro literal,\nfalse if not.","summary":"<p>Returns true if current variable potentially referenced in a macro literal, false if not.</p>","abstract":false,"args":[{"name":"scope","doc":null,"default_value":"@scope","external_name":"scope","restriction":""}],"args_string":"(scope = @scope)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L118","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/ast/variabling/variable.cr#L118","def":{"name":"used_in_macro?","args":[{"name":"scope","doc":null,"default_value":"@scope","external_name":"scope","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"scope.inner_scopes.each do |inner_scope|\n  if (MacroLiteralFinder.new(inner_scope.node)).references?(node)\n    return true\n  end\nend\nif (outer_scope = scope.outer_scope) && (used_in_macro?(outer_scope))\n  return true\nend\nfalse\n"}}],"macros":[],"types":[]}]},{"html_id":"github.com/veelenga/ameba/Ameba/Config","path":"Ameba/Config.html","kind":"class","full_name":"Ameba::Config","name":"Config","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/config.cr","line_number":14,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/config.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"AVAILABLE_FORMATTERS","value":"{progress: Formatter::DotFormatter, todo: Formatter::TODOFormatter, flycheck: Formatter::FlycheckFormatter, silent: Formatter::BaseFormatter, disabled: Formatter::DisabledFormatter, json: Formatter::JSONFormatter}","doc":null,"summary":null},{"name":"PATH","value":"\".ameba.yml\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba","kind":"module","full_name":"Ameba","name":"Ameba"},"doc":"A configuration entry for `Ameba::Runner`.\n\nConfig can be loaded from configuration YAML file and adjusted.\n\n```\nconfig = Config.load\nconfig.formatter = my_formatter\n```\n\nBy default config loads `.ameba.yml` file in a current directory.\n","summary":"<p>A configuration entry for <code><a href=\"../Ameba/Runner.html\">Ameba::Runner</a></code>.</p>","class_methods":[{"id":"formatter_names-class-method","html_id":"formatter_names-class-method","name":"formatter_names","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/config.cr#L53","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/config.cr#L53","def":{"name":"formatter_names","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AVAILABLE_FORMATTERS.keys.join(\"|\")"}},{"id":"load(path=PATH)-class-method","html_id":"load(path=PATH)-class-method","name":"load","doc":"Loads YAML configuration file by `path`.\n\n```\nconfig = Ameba::Config.load\n```\n","summary":"<p>Loads YAML configuration file by <code>path</code>.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"PATH","external_name":"path","restriction":""}],"args_string":"(path = <span class=\"t\">PATH</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/config.cr#L46","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/config.cr#L46","def":{"name":"load","args":[{"name":"path","doc":null,"default_value":"PATH","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  content = File.exists?(path) ? File.read(path) : \"\"\n  Config.new(YAML.parse(content))\nrescue e\n  raise(\"Config file is invalid: #{e.message}\")\nend"}}],"constructors":[{"id":"new(config:YAML::Any)-class-method","html_id":"new(config:YAML::Any)-class-method","name":"new","doc":"Creates a new instance of `Ameba::Config` based on YAML parameters.\n\n`Config.load` uses this constructor to instantiate new config by YAML file.","summary":"<p>Creates a new instance of <code><a href=\"../Ameba/Config.html\">Ameba::Config</a></code> based on YAML parameters.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":"YAML::Any"}],"args_string":"(config : YAML::Any)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/config.cr#L32","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/config.cr#L32","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(config)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"files-instance-method","html_id":"files-instance-method","name":"files","doc":"Returns a list of paths (with wildcards) to files.\nRepresents a list of sources to be inspected.\nIf files are not set, it will return default list of files.\n\n```\nconfig = Ameba::Config.load\nconfig.files = [\"**/*.cr\"]\nconfig.files\n```\n","summary":"<p>Returns a list of paths (with wildcards) to files.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/config.cr#L67","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/config.cr#L67","def":{"name":"files","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@files || (@files = default_files)"}},{"id":"files=(files:Array(String)?)-instance-method","html_id":"files=(files:Array(String)?)-instance-method","name":"files=","doc":null,"summary":null,"abstract":false,"args":[{"name":"files","doc":null,"default_value":"","external_name":"files","restriction":"Array(String) | ::Nil"}],"args_string":"(files : Array(String)?)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/config.cr#L26","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/config.cr#L26","def":{"name":"files=","args":[{"name":"files","doc":null,"default_value":"","external_name":"files","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@files = files"}},{"id":"formatter-instance-method","html_id":"formatter-instance-method","name":"formatter","doc":"Returns a formatter to be used while inspecting files.\nIf formatter is not set, it will return default formatter.\n\n```\nconfig = Ameba::Config.load\nconfig.formatter = custom_formatter\nconfig.formatter\n```\n","summary":"<p>Returns a formatter to be used while inspecting files.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/config.cr#L80","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/config.cr#L80","def":{"name":"formatter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@formatter || (@formatter = default_formatter)"}},{"id":"formatter=(formatter:Formatter::BaseFormatter?)-instance-method","html_id":"formatter=(formatter:Formatter::BaseFormatter?)-instance-method","name":"formatter=","doc":null,"summary":null,"abstract":false,"args":[{"name":"formatter","doc":null,"default_value":"","external_name":"formatter","restriction":"Formatter::BaseFormatter | ::Nil"}],"args_string":"(formatter : Formatter::BaseFormatter?)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/config.cr#L25","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/config.cr#L25","def":{"name":"formatter=","args":[{"name":"formatter","doc":null,"default_value":"","external_name":"formatter","restriction":"Formatter::BaseFormatter | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@formatter = formatter"}},{"id":"formatter=(name:String|Symbol)-instance-method","html_id":"formatter=(name:String|Symbol)-instance-method","name":"formatter=","doc":"Sets formatter by name.\n\n```\nconfig = Ameba::Config.load\nconfig.formatter = :progress\n```\n","summary":"<p>Sets formatter by name.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String | Symbol"}],"args_string":"(name : String | Symbol)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/config.cr#L91","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/config.cr#L91","def":{"name":"formatter=","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String | Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if f = AVAILABLE_FORMATTERS[name]?\n  @formatter = f.new\nelse\n  raise(\"Unknown formatter `#{name}`. Use one of #{Config.formatter_names}.\")\nend"}},{"id":"rules:Array(Rule::Base)-instance-method","html_id":"rules:Array(Rule::Base)-instance-method","name":"rules","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Rule::Base)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/config.cr#L27","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/config.cr#L27","def":{"name":"rules","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Rule::Base)","visibility":"Public","body":"@rules"}},{"id":"update_rule(name,enabled=true,excluded=nil)-instance-method","html_id":"update_rule(name,enabled=true,excluded=nil)-instance-method","name":"update_rule","doc":"Updates rule properties.\n\n```\nconfig = Ameba::Config.load\nconfig.update_rule \"MyRuleName\", enabled: false\n```\n","summary":"<p>Updates rule properties.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"enabled","doc":null,"default_value":"true","external_name":"enabled","restriction":""},{"name":"excluded","doc":null,"default_value":"nil","external_name":"excluded","restriction":""}],"args_string":"(name, enabled = <span class=\"n\">true</span>, excluded = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/config.cr#L106","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/config.cr#L106","def":{"name":"update_rule","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"enabled","doc":null,"default_value":"true","external_name":"enabled","restriction":""},{"name":"excluded","doc":null,"default_value":"nil","external_name":"excluded","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"index = @rules.index do |r|\n  r.name == name\nend\nif index\nelse\n  raise(ArgumentError.new(\"Rule `#{name}` does not exist\"))\nend\nrule = @rules[index]\nrule.enabled = enabled\nrule.excluded = excluded\n@rules[index] = rule\n"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Formatter","path":"Ameba/Formatter.html","kind":"module","full_name":"Ameba::Formatter","name":"Formatter","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"ameba/formatter/base_formatter.cr","line_number":2,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/base_formatter.cr"},{"filename":"ameba/formatter/disabled_formatter.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/disabled_formatter.cr"},{"filename":"ameba/formatter/dot_formatter.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/dot_formatter.cr"},{"filename":"ameba/formatter/flycheck_formatter.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/flycheck_formatter.cr"},{"filename":"ameba/formatter/json_formatter.cr","line_number":3,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/json_formatter.cr"},{"filename":"ameba/formatter/todo_formatter.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/todo_formatter.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba","kind":"module","full_name":"Ameba","name":"Ameba"},"doc":"A module that utilizes Ameba's formatters.","summary":"<p>A module that utilizes Ameba's formatters.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/veelenga/ameba/Ameba/Formatter/BaseFormatter","path":"Ameba/Formatter/BaseFormatter.html","kind":"class","full_name":"Ameba::Formatter::BaseFormatter","name":"BaseFormatter","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/formatter/base_formatter.cr","line_number":6,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/base_formatter.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/veelenga/ameba/Ameba/Formatter/DisabledFormatter","kind":"class","full_name":"Ameba::Formatter::DisabledFormatter","name":"DisabledFormatter"},{"html_id":"github.com/veelenga/ameba/Ameba/Formatter/DotFormatter","kind":"class","full_name":"Ameba::Formatter::DotFormatter","name":"DotFormatter"},{"html_id":"github.com/veelenga/ameba/Ameba/Formatter/FlycheckFormatter","kind":"class","full_name":"Ameba::Formatter::FlycheckFormatter","name":"FlycheckFormatter"},{"html_id":"github.com/veelenga/ameba/Ameba/Formatter/JSONFormatter","kind":"class","full_name":"Ameba::Formatter::JSONFormatter","name":"JSONFormatter"}],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Formatter","kind":"module","full_name":"Ameba::Formatter","name":"Formatter"},"doc":"A base formatter for all formatters. It uses `output` IO\nto report results and also implements stub methods for\ncallbacks in `Ameba::Runner#run` method.","summary":"<p>A base formatter for all formatters.</p>","class_methods":[],"constructors":[{"id":"new(output=STDOUT)-class-method","html_id":"new(output=STDOUT)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"output","doc":null,"default_value":"STDOUT","external_name":"output","restriction":""}],"args_string":"(output = <span class=\"t\">STDOUT</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/base_formatter.cr#L10","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/base_formatter.cr#L10","def":{"name":"new","args":[{"name":"output","doc":null,"default_value":"STDOUT","external_name":"output","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(output)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"finished(sources)-instance-method","html_id":"finished(sources)-instance-method","name":"finished","doc":"Callback that indicates when inspection is finished.\nA list of inspected sources is passed as an argument.","summary":"<p>Callback that indicates when inspection is finished.</p>","abstract":false,"args":[{"name":"sources","doc":null,"default_value":"","external_name":"sources","restriction":""}],"args_string":"(sources)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/base_formatter.cr#L27","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/base_formatter.cr#L27","def":{"name":"finished","args":[{"name":"sources","doc":null,"default_value":"","external_name":"sources","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"output:IO::FileDescriptor|IO::Memory-instance-method","html_id":"output:IO::FileDescriptor|IO::Memory-instance-method","name":"output","doc":"TODO: allow other IOs","summary":"<p><span class=\"flag orange\">TODO</span>  allow other IOs</p>","abstract":false,"args":[],"args_string":" : IO::FileDescriptor | IO::Memory","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/base_formatter.cr#L8","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/base_formatter.cr#L8","def":{"name":"output","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO::FileDescriptor | IO::Memory","visibility":"Public","body":"@output"}},{"id":"source_finished(source:Source)-instance-method","html_id":"source_finished(source:Source)-instance-method","name":"source_finished","doc":"Callback that indicates when source inspection is finished.\nA corresponding source is passed as an argument.","summary":"<p>Callback that indicates when source inspection is finished.</p>","abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"Source"}],"args_string":"(source : Source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/base_formatter.cr#L19","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/base_formatter.cr#L19","def":{"name":"source_finished","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"Source"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"source_started(source:Source)-instance-method","html_id":"source_started(source:Source)-instance-method","name":"source_started","doc":"Callback that indicates when source inspection is finished.\nA corresponding source is passed as an argument.","summary":"<p>Callback that indicates when source inspection is finished.</p>","abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"Source"}],"args_string":"(source : Source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/base_formatter.cr#L23","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/base_formatter.cr#L23","def":{"name":"source_started","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"Source"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"started(sources)-instance-method","html_id":"started(sources)-instance-method","name":"started","doc":"Callback that indicates when inspecting is started.\nA list of sources to inspect is passed as an argument.","summary":"<p>Callback that indicates when inspecting is started.</p>","abstract":false,"args":[{"name":"sources","doc":null,"default_value":"","external_name":"sources","restriction":""}],"args_string":"(sources)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/base_formatter.cr#L15","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/base_formatter.cr#L15","def":{"name":"started","args":[{"name":"sources","doc":null,"default_value":"","external_name":"sources","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Formatter/DisabledFormatter","path":"Ameba/Formatter/DisabledFormatter.html","kind":"class","full_name":"Ameba::Formatter::DisabledFormatter","name":"DisabledFormatter","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Formatter/BaseFormatter","kind":"class","full_name":"Ameba::Formatter::BaseFormatter","name":"BaseFormatter"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Formatter/BaseFormatter","kind":"class","full_name":"Ameba::Formatter::BaseFormatter","name":"BaseFormatter"},{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/formatter/disabled_formatter.cr","line_number":3,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/disabled_formatter.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Formatter","kind":"module","full_name":"Ameba::Formatter","name":"Formatter"},"doc":"A formatter that shows all disabled line using inline directives.","summary":"<p>A formatter that shows all disabled line using inline directives.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"finished(sources)-instance-method","html_id":"finished(sources)-instance-method","name":"finished","doc":null,"summary":null,"abstract":false,"args":[{"name":"sources","doc":null,"default_value":"","external_name":"sources","restriction":""}],"args_string":"(sources)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/disabled_formatter.cr#L4","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/disabled_formatter.cr#L4","def":{"name":"finished","args":[{"name":"sources","doc":null,"default_value":"","external_name":"sources","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"output << \"Disabled rules using inline directives: \\n\\n\"\nsources.each do |source|\n  source.errors.select(&.disabled?).each do |e|\n    if loc = e.location\n      output << (\"#{source.path}:#{loc.line_number}\".colorize(:cyan))\n      output << \" #{e.rule.name}\n\"\n    end\n  end\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Formatter/DotFormatter","path":"Ameba/Formatter/DotFormatter.html","kind":"class","full_name":"Ameba::Formatter::DotFormatter","name":"DotFormatter","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Formatter/BaseFormatter","kind":"class","full_name":"Ameba::Formatter::BaseFormatter","name":"BaseFormatter"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Formatter/BaseFormatter","kind":"class","full_name":"Ameba::Formatter::BaseFormatter","name":"BaseFormatter"},{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/formatter/dot_formatter.cr","line_number":4,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/dot_formatter.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/veelenga/ameba/Ameba/Formatter/TODOFormatter","kind":"class","full_name":"Ameba::Formatter::TODOFormatter","name":"TODOFormatter"}],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Formatter","kind":"module","full_name":"Ameba::Formatter","name":"Formatter"},"doc":"A formatter that shows a progress of inspection in a terminal using dots.\nIt is similar to Crystal's dot formatter for specs.","summary":"<p>A formatter that shows a progress of inspection in a terminal using dots.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"finished(sources)-instance-method","html_id":"finished(sources)-instance-method","name":"finished","doc":"Reports a message when inspection is finished.","summary":"<p>Reports a message when inspection is finished.</p>","abstract":false,"args":[{"name":"sources","doc":null,"default_value":"","external_name":"sources","restriction":""}],"args_string":"(sources)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/dot_formatter.cr#L22","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/dot_formatter.cr#L22","def":{"name":"finished","args":[{"name":"sources","doc":null,"default_value":"","external_name":"sources","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"output << \"\\n\\n\"\nfailed_sources = sources.reject(&.valid?)\nfailed_sources.each do |source|\n  source.errors.each do |error|\n    if error.disabled?\n      next\n    end\n    output << (\"#{error.location}\n\".colorize(:cyan))\n    output << (\"#{error.rule.name}: #{error.message}\n\n\".colorize(:red))\n  end\nend\noutput << (finished_in_message(@started_at, Time.now))\noutput << (final_message(sources, failed_sources))\n"}},{"id":"source_finished(source:Source)-instance-method","html_id":"source_finished(source:Source)-instance-method","name":"source_finished","doc":"Reports a result of the inspection of a corresponding source.","summary":"<p>Reports a result of the inspection of a corresponding source.</p>","abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"Source"}],"args_string":"(source : Source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/dot_formatter.cr#L15","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/dot_formatter.cr#L15","def":{"name":"source_finished","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"Source"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"sym = source.valid? ? \".\".colorize(:green) : \"F\".colorize(:red)\noutput << sym\noutput.flush\n"}},{"id":"started(sources)-instance-method","html_id":"started(sources)-instance-method","name":"started","doc":"Reports a message when inspection is started.","summary":"<p>Reports a message when inspection is started.</p>","abstract":false,"args":[{"name":"sources","doc":null,"default_value":"","external_name":"sources","restriction":""}],"args_string":"(sources)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/dot_formatter.cr#L8","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/dot_formatter.cr#L8","def":{"name":"started","args":[{"name":"sources","doc":null,"default_value":"","external_name":"sources","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@started_at = Time.now\noutput << (started_message(sources.size))\n"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Formatter/FlycheckFormatter","path":"Ameba/Formatter/FlycheckFormatter.html","kind":"class","full_name":"Ameba::Formatter::FlycheckFormatter","name":"FlycheckFormatter","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Formatter/BaseFormatter","kind":"class","full_name":"Ameba::Formatter::BaseFormatter","name":"BaseFormatter"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Formatter/BaseFormatter","kind":"class","full_name":"Ameba::Formatter::BaseFormatter","name":"BaseFormatter"},{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/formatter/flycheck_formatter.cr","line_number":2,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/flycheck_formatter.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Formatter","kind":"module","full_name":"Ameba::Formatter","name":"Formatter"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"source_finished(source:Source)-instance-method","html_id":"source_finished(source:Source)-instance-method","name":"source_finished","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"Source"}],"args_string":"(source : Source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/flycheck_formatter.cr#L3","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/flycheck_formatter.cr#L3","def":{"name":"source_finished","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"Source"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"source.errors.each do |e|\n  if e.disabled?\n    next\n  end\n  if loc = e.location\n    output.printf(\"%s:%d:%d: %s: [%s] %s\\n\", source.path, loc.line_number, loc.column_number, \"E\", e.rule.name, e.message.gsub(\"\\n\", \" \"))\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Formatter/JSONFormatter","path":"Ameba/Formatter/JSONFormatter.html","kind":"class","full_name":"Ameba::Formatter::JSONFormatter","name":"JSONFormatter","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Formatter/BaseFormatter","kind":"class","full_name":"Ameba::Formatter::BaseFormatter","name":"BaseFormatter"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Formatter/BaseFormatter","kind":"class","full_name":"Ameba::Formatter::BaseFormatter","name":"BaseFormatter"},{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/formatter/json_formatter.cr","line_number":52,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/json_formatter.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Formatter","kind":"module","full_name":"Ameba::Formatter","name":"Formatter"},"doc":"A formatter that produces the result in a json format.\n\nExample:\n\n```\n{\n  \"metadata\": {\n    \"ameba_version\":   \"x.x.x\",\n    \"crystal_version\": \"x.x.x\",\n  },\n  \"sources\": [\n    {\n      \"errors\": [\n        {\n          \"location\": {\n            \"column\": 7,\n            \"line\":   17,\n          },\n          \"message\":   \"Useless assignment to variable `a`\",\n          \"rule_name\": \"UselessAssign\",\n        },\n        {\n          \"location\": {\n            \"column\": 7,\n            \"line\":   18,\n          },\n          \"message\":   \"Useless assignment to variable `a`\",\n          \"rule_name\": \"UselessAssign\",\n        },\n        {\n          \"location\": {\n            \"column\": 7,\n            \"line\":   19,\n          },\n          \"message\":   \"Useless assignment to variable `a`\",\n          \"rule_name\": \"UselessAssign\",\n        },\n      ],\n      \"path\": \"src/ameba/formatter/json_formatter.cr\",\n    },\n  ],\n  \"summary\": {\n    \"errors_count\":         3,\n    \"target_sources_count\": 1,\n  },\n}\n```\n","summary":"<p>A formatter that produces the result in a json format.</p>","class_methods":[],"constructors":[{"id":"new(output=STDOUT)-class-method","html_id":"new(output=STDOUT)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"output","doc":null,"default_value":"STDOUT","external_name":"output","restriction":""}],"args_string":"(output = <span class=\"t\">STDOUT</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/json_formatter.cr#L53","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/json_formatter.cr#L53","def":{"name":"new","args":[{"name":"output","doc":null,"default_value":"STDOUT","external_name":"output","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(output)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"finished(sources)-instance-method","html_id":"finished(sources)-instance-method","name":"finished","doc":null,"summary":null,"abstract":false,"args":[{"name":"sources","doc":null,"default_value":"","external_name":"sources","restriction":""}],"args_string":"(sources)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/json_formatter.cr#L73","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/json_formatter.cr#L73","def":{"name":"finished","args":[{"name":"sources","doc":null,"default_value":"","external_name":"sources","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@result.to_json(@output)"}},{"id":"source_finished(source:Source)-instance-method","html_id":"source_finished(source:Source)-instance-method","name":"source_finished","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"Source"}],"args_string":"(source : Source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/json_formatter.cr#L61","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/json_formatter.cr#L61","def":{"name":"source_finished","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"Source"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json_source = AsJSON::Source.new(source.path)\nsource.errors.each do |e|\n  if e.disabled?\n    next\n  end\n  json_source.errors << (AsJSON::Error.new(e.rule.name, e.location, e.message))\n  __temp_365 = @result.summary\n  __temp_365.errors_count = __temp_365.errors_count + 1\nend\n@result.sources << json_source\n"}},{"id":"started(sources)-instance-method","html_id":"started(sources)-instance-method","name":"started","doc":null,"summary":null,"abstract":false,"args":[{"name":"sources","doc":null,"default_value":"","external_name":"sources","restriction":""}],"args_string":"(sources)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/json_formatter.cr#L57","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/json_formatter.cr#L57","def":{"name":"started","args":[{"name":"sources","doc":null,"default_value":"","external_name":"sources","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@result.summary.target_sources_count = sources.size"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Formatter/TODOFormatter","path":"Ameba/Formatter/TODOFormatter.html","kind":"class","full_name":"Ameba::Formatter::TODOFormatter","name":"TODOFormatter","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Formatter/DotFormatter","kind":"class","full_name":"Ameba::Formatter::DotFormatter","name":"DotFormatter"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Formatter/DotFormatter","kind":"class","full_name":"Ameba::Formatter::DotFormatter","name":"DotFormatter"},{"html_id":"github.com/veelenga/ameba/Ameba/Formatter/BaseFormatter","kind":"class","full_name":"Ameba::Formatter::BaseFormatter","name":"BaseFormatter"},{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/formatter/todo_formatter.cr","line_number":5,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/todo_formatter.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Formatter","kind":"module","full_name":"Ameba::Formatter","name":"Formatter"},"doc":"A formatter that creates a todo config.\nBasically, it takes all errors reported and disables corresponding rules\nor excludes failed sources from these rules.","summary":"<p>A formatter that creates a todo config.</p>","class_methods":[],"constructors":[{"id":"new(output=STDOUT,io=File.new(Config::PATH,mode:&quot;w&quot;))-class-method","html_id":"new(output=STDOUT,io=File.new(Config::PATH,mode:&amp;quot;w&amp;quot;))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"output","doc":null,"default_value":"STDOUT","external_name":"output","restriction":""},{"name":"io","doc":null,"default_value":"File.new(Config::PATH, mode: \"w\")","external_name":"io","restriction":""}],"args_string":"(output = <span class=\"t\">STDOUT</span>, io = <span class=\"t\">File</span>.<span class=\"k\">new</span>(<span class=\"t\">Config</span><span class=\"t\">::</span><span class=\"t\">PATH</span>, mode: <span class=\"s\">&quot;w&quot;</span>))","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/todo_formatter.cr#L8","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/todo_formatter.cr#L8","def":{"name":"new","args":[{"name":"output","doc":null,"default_value":"STDOUT","external_name":"output","restriction":""},{"name":"io","doc":null,"default_value":"File.new(Config::PATH, mode: \"w\")","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(output, io)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"finished(sources)-instance-method","html_id":"finished(sources)-instance-method","name":"finished","doc":null,"summary":null,"abstract":false,"args":[{"name":"sources","doc":null,"default_value":"","external_name":"sources","restriction":""}],"args_string":"(sources)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/todo_formatter.cr#L11","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/formatter/todo_formatter.cr#L11","def":{"name":"finished","args":[{"name":"sources","doc":null,"default_value":"","external_name":"sources","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"super(sources)\nerrors = sources.map(&.errors).flatten\nif errors.any?\n  generate_todo_config(errors)\nend\nif (io = @io).is_a?(File)\n  @output << \"Created #{io.path}\n\"\nend\n"}}],"macros":[],"types":[]}]},{"html_id":"github.com/veelenga/ameba/Ameba/InlineComments","path":"Ameba/InlineComments.html","kind":"module","full_name":"Ameba::InlineComments","name":"InlineComments","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"ameba/inline_comments.cr","line_number":3,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/inline_comments.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"COMMENT_DIRECTIVE_REGEX","value":"Regex.new(\"# ameba : (\\\\w+) ([\\\\w, ]+)\".gsub(\" \", \"\\\\s*\"))","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/veelenga/ameba/Ameba/Source","kind":"class","full_name":"Ameba::Source","name":"Source"}],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba","kind":"module","full_name":"Ameba","name":"Ameba"},"doc":"A module that utilizes inline comments parsing and processing logic.","summary":"<p>A module that utilizes inline comments parsing and processing logic.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"comment?(line_number:Int32)-instance-method","html_id":"comment?(line_number:Int32)-instance-method","name":"comment?","doc":"Returns true if the line at the given `line_number` is a comment.","summary":"<p>Returns true if the line at the given <code>line_number</code> is a comment.</p>","abstract":false,"args":[{"name":"line_number","doc":null,"default_value":"","external_name":"line_number","restriction":"Int32"}],"args_string":"(line_number : Int32)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/inline_comments.cr#L74","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/inline_comments.cr#L74","def":{"name":"comment?","args":[{"name":"line_number","doc":null,"default_value":"","external_name":"line_number","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if line = lines[line_number]?\n  comment?(line)\nend"}},{"id":"location_disabled?(location,rule)-instance-method","html_id":"location_disabled?(location,rule)-instance-method","name":"location_disabled?","doc":"Returns true if current location is disabled for a particular rule,\nfalse otherwise.\n\nLocation is disabled in two cases:\n  1. The line of the location ends with a comment directive.\n  2. The line above the location is a comment directive.\n\nFor example, here are two examples of disabled location:\n\n```\n# ameba:disable LargeNumbers\nTime.epoch(1483859302)\n\nTime.epoch(1483859302) # ameba:disable LargeNumbers\n```\n\nBut here are examples which are not considered as disabled location:\n\n```\n# ameba:disable LargeNumbers\n#\nTime.epoch(1483859302)\n\nif use_epoch? # ameba:disable LargeNumbers\n  Time.epoch(1483859302)\nend\n```\n","summary":"<p>Returns true if current location is disabled for a particular rule, false otherwise.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"","external_name":"location","restriction":""},{"name":"rule","doc":null,"default_value":"","external_name":"rule","restriction":""}],"args_string":"(location, rule)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/inline_comments.cr#L34","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/inline_comments.cr#L34","def":{"name":"location_disabled?","args":[{"name":"location","doc":null,"default_value":"","external_name":"location","restriction":""},{"name":"rule","doc":null,"default_value":"","external_name":"rule","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if Rule::SPECIAL.includes?(rule)\n  return false\nend\nif line_number = location.try do |__arg0|\n  __arg0.line_number.try(&.-(1))\nend\nelse\n  return false\nend\nif line = lines[line_number]?\nelse\n  return false\nend\n(line_disabled?(line, rule)) || (((line_number > 0 && (prev_line = lines[line_number - 1])) && (comment?(prev_line))) && (line_disabled?(prev_line, rule)))\n"}},{"id":"parse_inline_directive(line)-instance-method","html_id":"parse_inline_directive(line)-instance-method","name":"parse_inline_directive","doc":"Parses inline comment directive. Returns a tuple that consists of\nan action and parsed rules if directive found, nil otherwise.\n\n```\nline = \"# ameba:disable Rule1, Rule2\"\ndirective = parse_inline_directive(line)\ndirective[:action] # => \"disable\"\ndirective[:rules]  # => [\"Rule1\", \"Rule2\"]\n```\n\nIt ignores the directive if it is commented out.\n\n```\nline = \"# # ameba:disable Rule1, Rule2\"\nparse_inline_directive(line) # => nil\n```\n","summary":"<p>Parses inline comment directive.</p>","abstract":false,"args":[{"name":"line","doc":null,"default_value":"","external_name":"line","restriction":""}],"args_string":"(line)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/inline_comments.cr#L63","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/inline_comments.cr#L63","def":{"name":"parse_inline_directive","args":[{"name":"line","doc":null,"default_value":"","external_name":"line","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if directive = COMMENT_DIRECTIVE_REGEX.match(line)\n  if commented_out?(line.gsub(directive[0], \"\"))\n    return\n  end\n  {action: directive[1], rules: directive[2].split(/[\\s,]/, remove_empty: true)}\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule","path":"Ameba/Rule.html","kind":"module","full_name":"Ameba::Rule","name":"Rule","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"ameba/rule/base.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/base.cr"},{"filename":"ameba/rule/comparison_to_boolean.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/comparison_to_boolean.cr"},{"filename":"ameba/rule/constant_names.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/constant_names.cr"},{"filename":"ameba/rule/debugger_statement.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/debugger_statement.cr"},{"filename":"ameba/rule/empty_ensure.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/empty_ensure.cr"},{"filename":"ameba/rule/empty_expression.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/empty_expression.cr"},{"filename":"ameba/rule/hash_duplicated_key.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/hash_duplicated_key.cr"},{"filename":"ameba/rule/large_numbers.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/large_numbers.cr"},{"filename":"ameba/rule/line_length.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/line_length.cr"},{"filename":"ameba/rule/literal_in_condition.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/literal_in_condition.cr"},{"filename":"ameba/rule/literal_in_interpolation.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/literal_in_interpolation.cr"},{"filename":"ameba/rule/method_names.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/method_names.cr"},{"filename":"ameba/rule/negated_conditions_in_unless.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/negated_conditions_in_unless.cr"},{"filename":"ameba/rule/percent_arrays.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/percent_arrays.cr"},{"filename":"ameba/rule/predicate_name.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/predicate_name.cr"},{"filename":"ameba/rule/rand_zero.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/rand_zero.cr"},{"filename":"ameba/rule/redundant_begin.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/redundant_begin.cr"},{"filename":"ameba/rule/shadowed_exception.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/shadowed_exception.cr"},{"filename":"ameba/rule/syntax.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/syntax.cr"},{"filename":"ameba/rule/trailing_blank_lines.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/trailing_blank_lines.cr"},{"filename":"ameba/rule/trailing_whitespace.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/trailing_whitespace.cr"},{"filename":"ameba/rule/type_names.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/type_names.cr"},{"filename":"ameba/rule/unless_else.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/unless_else.cr"},{"filename":"ameba/rule/unneeded_disable_directive.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/unneeded_disable_directive.cr"},{"filename":"ameba/rule/unused_argument.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/unused_argument.cr"},{"filename":"ameba/rule/useless_assign.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/useless_assign.cr"},{"filename":"ameba/rule/useless_condition_in_when.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/useless_condition_in_when.cr"},{"filename":"ameba/rule/variable_names.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/variable_names.cr"},{"filename":"ameba/rule/while_true.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/while_true.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"SPECIAL","value":"[Syntax.rule_name, UnneededDisableDirective.rule_name]","doc":"List of names of the special rules, which\nbehave differently than usual rules.","summary":"<p>List of names of the special rules, which behave differently than usual rules.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba","kind":"module","full_name":"Ameba","name":"Ameba"},"doc":null,"summary":null,"class_methods":[{"id":"rules-class-method","html_id":"rules-class-method","name":"rules","doc":"Returns a list of all available rules\n(except a `Rule::Syntax` which is a special rule).\n\n```\nAmeba::Rule.rules # => [LineLength, ConstantNames, ....]\n```\n","summary":"<p>Returns a list of all available rules (except a <code><a href=\"../Ameba/Rule/Syntax.html\">Rule::Syntax</a></code> which is a special rule).</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/base.cr#L110","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/base.cr#L110","def":{"name":"rules","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Base.subclasses"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","path":"Ameba/Rule/Base.html","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base","abstract":true,"superclass":{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/base.cr","line_number":30,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/base.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"}],"extended_modules":[],"subclasses":[{"html_id":"github.com/veelenga/ameba/Ameba/Rule/ComparisonToBoolean","kind":"struct","full_name":"Ameba::Rule::ComparisonToBoolean","name":"ComparisonToBoolean"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/ConstantNames","kind":"struct","full_name":"Ameba::Rule::ConstantNames","name":"ConstantNames"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/DebuggerStatement","kind":"struct","full_name":"Ameba::Rule::DebuggerStatement","name":"DebuggerStatement"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/EmptyEnsure","kind":"struct","full_name":"Ameba::Rule::EmptyEnsure","name":"EmptyEnsure"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/EmptyExpression","kind":"struct","full_name":"Ameba::Rule::EmptyExpression","name":"EmptyExpression"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/HashDuplicatedKey","kind":"struct","full_name":"Ameba::Rule::HashDuplicatedKey","name":"HashDuplicatedKey"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/LargeNumbers","kind":"struct","full_name":"Ameba::Rule::LargeNumbers","name":"LargeNumbers"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/LineLength","kind":"struct","full_name":"Ameba::Rule::LineLength","name":"LineLength"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/LiteralInCondition","kind":"struct","full_name":"Ameba::Rule::LiteralInCondition","name":"LiteralInCondition"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/LiteralInInterpolation","kind":"struct","full_name":"Ameba::Rule::LiteralInInterpolation","name":"LiteralInInterpolation"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/MethodNames","kind":"struct","full_name":"Ameba::Rule::MethodNames","name":"MethodNames"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/NegatedConditionsInUnless","kind":"struct","full_name":"Ameba::Rule::NegatedConditionsInUnless","name":"NegatedConditionsInUnless"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/PercentArrays","kind":"struct","full_name":"Ameba::Rule::PercentArrays","name":"PercentArrays"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/PredicateName","kind":"struct","full_name":"Ameba::Rule::PredicateName","name":"PredicateName"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/RandZero","kind":"struct","full_name":"Ameba::Rule::RandZero","name":"RandZero"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/RedundantBegin","kind":"struct","full_name":"Ameba::Rule::RedundantBegin","name":"RedundantBegin"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/ShadowedException","kind":"struct","full_name":"Ameba::Rule::ShadowedException","name":"ShadowedException"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Syntax","kind":"struct","full_name":"Ameba::Rule::Syntax","name":"Syntax"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/TrailingBlankLines","kind":"struct","full_name":"Ameba::Rule::TrailingBlankLines","name":"TrailingBlankLines"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/TrailingWhitespace","kind":"struct","full_name":"Ameba::Rule::TrailingWhitespace","name":"TrailingWhitespace"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/TypeNames","kind":"struct","full_name":"Ameba::Rule::TypeNames","name":"TypeNames"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/UnlessElse","kind":"struct","full_name":"Ameba::Rule::UnlessElse","name":"UnlessElse"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/UnneededDisableDirective","kind":"struct","full_name":"Ameba::Rule::UnneededDisableDirective","name":"UnneededDisableDirective"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/UnusedArgument","kind":"struct","full_name":"Ameba::Rule::UnusedArgument","name":"UnusedArgument"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/UselessAssign","kind":"struct","full_name":"Ameba::Rule::UselessAssign","name":"UselessAssign"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/UselessConditionInWhen","kind":"struct","full_name":"Ameba::Rule::UselessConditionInWhen","name":"UselessConditionInWhen"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/VariableNames","kind":"struct","full_name":"Ameba::Rule::VariableNames","name":"VariableNames"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/WhileTrue","kind":"struct","full_name":"Ameba::Rule::WhileTrue","name":"WhileTrue"}],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"Represents a base of all rules. In other words, all rules\ninherits from this struct:\n\n```\nstruct MyRule < Ameba::Rule::Base\n  def test(source)\n    if invalid?(source)\n      source.error self, location, \"Something wrong.\"\n    end\n  end\n\n  private def invalid?(source)\n    # ...\n  end\nend\n```\n\nEnforces rules to implement an abstract `#test` method which\nis designed to test the source passed in. If source has issues\nthat are tested by this rule, it should add an error.\n","summary":"<p>Represents a base of all rules.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/base.cr#L30","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/base.cr#L30","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"catch(source:Source)-instance-method","html_id":"catch(source:Source)-instance-method","name":"catch","doc":"A convenient addition to `#test` method that does the same\nbut returns a passed in `source` as an addition.\n\n```\nsource = MyRule.new.catch(source)\nsource.valid?\n```\n","summary":"<p>A convenient addition to <code><a href=\"../../Ameba/Rule/Base.html#test%28source%3ASource%2Cnode%3ACrystal%3A%3AASTNode%2C%2Aopts%29-instance-method\">#test</a></code> method that does the same but returns a passed in <code>source</code> as an addition.</p>","abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"Source"}],"args_string":"(source : Source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/base.cr#L49","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/base.cr#L49","def":{"name":"catch","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"Source"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"source.tap do |s|\n  test(s)\nend"}},{"id":"excluded?(source)-instance-method","html_id":"excluded?(source)-instance-method","name":"excluded?","doc":"Checks whether the source is excluded from this rule.\nIt searches for a path in `excluded` property which matches\nthe one of the given source.\n\n```\nmy_rule.excluded?(source) # => true or false\n```\n","summary":"<p>Checks whether the source is excluded from this rule.</p>","abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/base.cr#L76","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/base.cr#L76","def":{"name":"excluded?","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"excluded.try(&.any? do |path|\n  (source.path == path) || (source.fullpath == (File.expand_path(path)))\nend)"}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":"Returns a name of this rule, which is basically a class name.\n\n```\nstruct MyRule < Ameba::Rule::Base\n  def test(source)\n  end\nend\n\nMyRule.new.name # => \"MyRule\"\n```\n","summary":"<p>Returns a name of this rule, which is basically a class name.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/base.cr#L64","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/base.cr#L64","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"({{ @type }}).rule_name"}},{"id":"special?-instance-method","html_id":"special?-instance-method","name":"special?","doc":"Returns true if this rule is special and behaves differently than\nusual rules.\n\n```\nmy_rule.special? # => true or false\n```\n","summary":"<p>Returns true if this rule is special and behaves differently than usual rules.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/base.cr#L90","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/base.cr#L90","def":{"name":"special?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SPECIAL.includes?(name)"}},{"id":"test(source:Source,node:Crystal::ASTNode,*opts)-instance-method","html_id":"test(source:Source,node:Crystal::ASTNode,*opts)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"Source"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ASTNode"},{"name":"opts","doc":null,"default_value":"","external_name":"opts","restriction":""}],"args_string":"(source : Source, node : Crystal::ASTNode, *opts)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/base.cr#L37","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/base.cr#L37","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"Source"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ASTNode"},{"name":"opts","doc":null,"default_value":"","external_name":"opts","restriction":""}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"test(source:Source)-instance-method","html_id":"test(source:Source)-instance-method","name":"test","doc":"This method is designed to test the source passed in. If source has issues\nthat are tested by this rule, it should add an error.","summary":"<p>This method is designed to test the source passed in.</p>","abstract":true,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"Source"}],"args_string":"(source : Source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/base.cr#L35","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/base.cr#L35","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"Source"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/ComparisonToBoolean","path":"Ameba/Rule/ComparisonToBoolean.html","kind":"struct","full_name":"Ameba::Rule::ComparisonToBoolean","name":"ComparisonToBoolean","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/comparison_to_boolean.cr","line_number":23,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/comparison_to_boolean.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"MSG","value":"\"Comparison to a boolean is pointless\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that disallows comparison to booleans.\n\nFor example, these are considered invalid:\n\n```\nfoo == true\nbar != false\nfalse === baz\n```\n\nThis is because these expressions evaluate to `true` or `false`, so you\ncould get the same result by using either the variable directly,\nor negating the variable.\n\nYAML configuration example:\n\n```\nComparisonToBoolean:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows comparison to booleans.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that disallows comparison to booleans.\n\nFor example, these are considered invalid:\n\n```\nfoo == true\nbar != false\nfalse === baz\n```\n\nThis is because these expressions evaluate to `true` or `false`, so you\ncould get the same result by using either the variable directly,\nor negating the variable.\n\nYAML configuration example:\n\n```\nComparisonToBoolean:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows comparison to booleans.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/comparison_to_boolean.cr#L23","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/comparison_to_boolean.cr#L23","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:String)-instance-method","html_id":"description=(_description:String)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"args_string":"(_description : String)","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"test(source,node:Crystal::Call)-instance-method","html_id":"test(source,node:Crystal::Call)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Call"}],"args_string":"(source, node : Crystal::Call)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/comparison_to_boolean.cr#L35","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/comparison_to_boolean.cr#L35","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Call"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"comparison? = ([\"==\", \"!=\", \"===\"] of ::String).includes?(node.name)\nto_boolean? = node.args.first?.try do |__arg0|\n  __arg0.is_a?(Crystal::BoolLiteral)\nend || (node.obj.is_a?(Crystal::BoolLiteral))\nif comparison? && to_boolean?\nelse\n  return\nend\nsource.error(self, node.location, MSG)\n"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/comparison_to_boolean.cr#L31","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/comparison_to_boolean.cr#L31","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AST::NodeVisitor.new(self, source)"}},{"id":"to_yaml(__temp_33:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_33:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_33","doc":null,"default_value":"","external_name":"__temp_33","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_33 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_33","doc":null,"default_value":"","external_name":"__temp_33","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_33.mapping(reference: self) do\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_33)\n    _enabled.to_yaml(__temp_33)\n  end\n  _description = @description\n  if _description.nil?\n  else\n    \"Description\".to_yaml(__temp_33)\n    _description.to_yaml(__temp_33)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_33)\n    _excluded.to_yaml(__temp_33)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/ConstantNames","path":"Ameba/Rule/ConstantNames.html","kind":"struct","full_name":"Ameba::Rule::ConstantNames","name":"ConstantNames","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/constant_names.cr","line_number":25,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/constant_names.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"MSG","value":"\"Constant name should be screaming-cased: %s, not %s\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that enforces constant names to be in screaming case.\n\nFor example, these constant names are considered valid:\n\n```\nLUCKY_NUMBERS     = [3, 7, 11]\nDOCUMENTATION_URL = \"http://crystal-lang.org/docs\"\n```\n\nAnd these are invalid names:\n\n```\nMyBadConstant = 1\nWrong_NAME    = 2\n```\n\nYAML configuration example:\n\n```\nConstantNames:\n  Enabled: true\n```\n","summary":"<p>A rule that enforces constant names to be in screaming case.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that enforces constant names to be in screaming case.\n\nFor example, these constant names are considered valid:\n\n```\nLUCKY_NUMBERS     = [3, 7, 11]\nDOCUMENTATION_URL = \"http://crystal-lang.org/docs\"\n```\n\nAnd these are invalid names:\n\n```\nMyBadConstant = 1\nWrong_NAME    = 2\n```\n\nYAML configuration example:\n\n```\nConstantNames:\n  Enabled: true\n```\n","summary":"<p>A rule that enforces constant names to be in screaming case.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/constant_names.cr#L25","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/constant_names.cr#L25","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:String)-instance-method","html_id":"description=(_description:String)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"args_string":"(_description : String)","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"test(source,node:Crystal::Assign)-instance-method","html_id":"test(source,node:Crystal::Assign)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Assign"}],"args_string":"(source, node : Crystal::Assign)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/constant_names.cr#L36","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/constant_names.cr#L36","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Assign"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (target = node.target).is_a?(Crystal::Path)\n  name = target.names.first\n  if (expected = name.upcase) == name\n    return\n  end\n  source.error(self, node.location, sprintf(MSG, expected, name))\nend"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/constant_names.cr#L32","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/constant_names.cr#L32","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AST::NodeVisitor.new(self, source)"}},{"id":"to_yaml(__temp_45:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_45:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_45","doc":null,"default_value":"","external_name":"__temp_45","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_45 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_45","doc":null,"default_value":"","external_name":"__temp_45","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_45.mapping(reference: self) do\n  _description = @description\n  if _description.nil?\n  else\n    \"Description\".to_yaml(__temp_45)\n    _description.to_yaml(__temp_45)\n  end\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_45)\n    _enabled.to_yaml(__temp_45)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_45)\n    _excluded.to_yaml(__temp_45)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/DebuggerStatement","path":"Ameba/Rule/DebuggerStatement.html","kind":"struct","full_name":"Ameba::Rule::DebuggerStatement","name":"DebuggerStatement","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/debugger_statement.cr","line_number":14,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/debugger_statement.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"MSG","value":"\"Possible forgotten debugger statement detected\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that disallows calls to debugger.\n\nThis is because we don't want debugger breakpoints accidentally being\ncommitted into our codebase.\n\nYAML configuration example:\n\n```\nDebuggerStatement:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows calls to debugger.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that disallows calls to debugger.\n\nThis is because we don't want debugger breakpoints accidentally being\ncommitted into our codebase.\n\nYAML configuration example:\n\n```\nDebuggerStatement:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows calls to debugger.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/debugger_statement.cr#L14","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/debugger_statement.cr#L14","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:String)-instance-method","html_id":"description=(_description:String)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"args_string":"(_description : String)","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"test(source,node:Crystal::Call)-instance-method","html_id":"test(source,node:Crystal::Call)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Call"}],"args_string":"(source, node : Crystal::Call)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/debugger_statement.cr#L25","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/debugger_statement.cr#L25","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Call"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ((node.name == \"debugger\") && node.args.empty?) && (node.obj.nil?)\nelse\n  return\nend\nsource.error(self, node.location, MSG)\n"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/debugger_statement.cr#L21","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/debugger_statement.cr#L21","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AST::NodeVisitor.new(self, source)"}},{"id":"to_yaml(__temp_57:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_57:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_57","doc":null,"default_value":"","external_name":"__temp_57","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_57 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_57","doc":null,"default_value":"","external_name":"__temp_57","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_57.mapping(reference: self) do\n  _description = @description\n  if _description.nil?\n  else\n    \"Description\".to_yaml(__temp_57)\n    _description.to_yaml(__temp_57)\n  end\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_57)\n    _enabled.to_yaml(__temp_57)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_57)\n    _excluded.to_yaml(__temp_57)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/EmptyEnsure","path":"Ameba/Rule/EmptyEnsure.html","kind":"struct","full_name":"Ameba::Rule::EmptyEnsure","name":"EmptyEnsure","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/empty_ensure.cr","line_number":35,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/empty_ensure.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"MSG","value":"\"Empty `ensure` block detected\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that disallows empty ensure statement.\n\nFor example, this is considered invalid:\n\n```\ndef some_method\n  do_some_stuff\nensure\nend\n\nbegin\n  do_some_stuff\nensure\nend\n```\n\nAnd it should be written as this:\n\n\n```\ndef some_method\n  do_some_stuff\nensure\n  do_something_else\nend\n\nbegin\n  do_some_stuff\nensure\n  do_something_else\nend\n```\n","summary":"<p>A rule that disallows empty ensure statement.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that disallows empty ensure statement.\n\nFor example, this is considered invalid:\n\n```\ndef some_method\n  do_some_stuff\nensure\nend\n\nbegin\n  do_some_stuff\nensure\nend\n```\n\nAnd it should be written as this:\n\n\n```\ndef some_method\n  do_some_stuff\nensure\n  do_something_else\nend\n\nbegin\n  do_some_stuff\nensure\n  do_something_else\nend\n```\n","summary":"<p>A rule that disallows empty ensure statement.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/empty_ensure.cr#L35","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/empty_ensure.cr#L35","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:String)-instance-method","html_id":"description=(_description:String)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"args_string":"(_description : String)","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"test(source,node:Crystal::ExceptionHandler)-instance-method","html_id":"test(source,node:Crystal::ExceptionHandler)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ExceptionHandler"}],"args_string":"(source, node : Crystal::ExceptionHandler)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/empty_ensure.cr#L46","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/empty_ensure.cr#L46","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ExceptionHandler"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node_ensure = node.ensure\nif (node_ensure.nil?) || (!node_ensure.nop?)\n  return\nend\nsource.error(self, node.location, MSG)\n"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/empty_ensure.cr#L42","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/empty_ensure.cr#L42","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AST::NodeVisitor.new(self, source)"}},{"id":"to_yaml(__temp_69:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_69:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_69","doc":null,"default_value":"","external_name":"__temp_69","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_69 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_69","doc":null,"default_value":"","external_name":"__temp_69","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_69.mapping(reference: self) do\n  _description = @description\n  if _description.nil?\n  else\n    \"Description\".to_yaml(__temp_69)\n    _description.to_yaml(__temp_69)\n  end\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_69)\n    _enabled.to_yaml(__temp_69)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_69)\n    _excluded.to_yaml(__temp_69)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/EmptyExpression","path":"Ameba/Rule/EmptyExpression.html","kind":"struct","full_name":"Ameba::Rule::EmptyExpression","name":"EmptyExpression","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/AST/Util","kind":"module","full_name":"Ameba::AST::Util","name":"Util"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/empty_expression.cr","line_number":31,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/empty_expression.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"MSG","value":"\"Avoid empty expression %s\"","doc":null,"summary":null},{"name":"MSG_EXRS","value":"\"Avoid empty expressions\"","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/veelenga/ameba/Ameba/AST/Util","kind":"module","full_name":"Ameba::AST::Util","name":"Util"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that disallows empty expressions.\n\nThis is considered invalid:\n\n```\nfoo = ()\n\nif ()\n  bar\nend\n```\n\nAnd this is valid:\n\n```\nfoo = (some_expression)\n\nif (some_expression)\n  bar\nend\n```\n\nYAML configuration example:\n\n```\nEmptyExpression:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows empty expressions.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that disallows empty expressions.\n\nThis is considered invalid:\n\n```\nfoo = ()\n\nif ()\n  bar\nend\n```\n\nAnd this is valid:\n\n```\nfoo = (some_expression)\n\nif (some_expression)\n  bar\nend\n```\n\nYAML configuration example:\n\n```\nEmptyExpression:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows empty expressions.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/empty_expression.cr#L31","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/empty_expression.cr#L31","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:String)-instance-method","html_id":"description=(_description:String)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"args_string":"(_description : String)","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"test(source,node:Crystal::NilLiteral)-instance-method","html_id":"test(source,node:Crystal::NilLiteral)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::NilLiteral"}],"args_string":"(source, node : Crystal::NilLiteral)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/empty_expression.cr#L45","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/empty_expression.cr#L45","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::NilLiteral"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"exp = (node_source(node, source.lines)).try(&.join)\nif (exp.nil?) || (exp == \"nil\")\n  return\nend\nsource.error(self, node.location, MSG % exp)\n"}},{"id":"test(source,node:Crystal::Expressions)-instance-method","html_id":"test(source,node:Crystal::Expressions)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Expressions"}],"args_string":"(source, node : Crystal::Expressions)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/empty_expression.cr#L53","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/empty_expression.cr#L53","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Expressions"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (node.expressions.size == 1) && node.expressions.first.nop?\n  source.error(self, node.location, MSG_EXRS)\nend"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/empty_expression.cr#L41","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/empty_expression.cr#L41","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AST::NodeVisitor.new(self, source)"}},{"id":"to_yaml(__temp_81:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_81:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_81","doc":null,"default_value":"","external_name":"__temp_81","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_81 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_81","doc":null,"default_value":"","external_name":"__temp_81","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_81.mapping(reference: self) do\n  _description = @description\n  if _description.nil?\n  else\n    \"Description\".to_yaml(__temp_81)\n    _description.to_yaml(__temp_81)\n  end\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_81)\n    _enabled.to_yaml(__temp_81)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_81)\n    _excluded.to_yaml(__temp_81)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/HashDuplicatedKey","path":"Ameba/Rule/HashDuplicatedKey.html","kind":"struct","full_name":"Ameba::Rule::HashDuplicatedKey","name":"HashDuplicatedKey","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/hash_duplicated_key.cr","line_number":23,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/hash_duplicated_key.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"MSG","value":"\"Duplicated keys in hash literal: %s\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that disallows duplicated keys in hash literals.\n\nThis is considered invalid:\n\n```\nh = {\"foo\" => 1, \"bar\" => 2, \"foo\" => 3}\n```\n\nAnd it has to written as this instead:\n\n```\nh = {\"foo\" => 1, \"bar\" => 2}\n```\n\nYAML configuration example:\n\n```\nHashDuplicatedKey:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows duplicated keys in hash literals.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that disallows duplicated keys in hash literals.\n\nThis is considered invalid:\n\n```\nh = {\"foo\" => 1, \"bar\" => 2, \"foo\" => 3}\n```\n\nAnd it has to written as this instead:\n\n```\nh = {\"foo\" => 1, \"bar\" => 2}\n```\n\nYAML configuration example:\n\n```\nHashDuplicatedKey:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows duplicated keys in hash literals.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/hash_duplicated_key.cr#L23","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/hash_duplicated_key.cr#L23","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:String)-instance-method","html_id":"description=(_description:String)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"args_string":"(_description : String)","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"test(source,node:Crystal::HashLiteral)-instance-method","html_id":"test(source,node:Crystal::HashLiteral)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::HashLiteral"}],"args_string":"(source, node : Crystal::HashLiteral)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/hash_duplicated_key.cr#L34","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/hash_duplicated_key.cr#L34","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::HashLiteral"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (keys = duplicated_keys(node.entries)).any?\nelse\n  return\nend\nsource.error(self, node.location, MSG % (keys.join(\", \")))\n"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/hash_duplicated_key.cr#L30","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/hash_duplicated_key.cr#L30","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AST::NodeVisitor.new(self, source)"}},{"id":"to_yaml(__temp_93:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_93:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_93","doc":null,"default_value":"","external_name":"__temp_93","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_93 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_93","doc":null,"default_value":"","external_name":"__temp_93","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_93.mapping(reference: self) do\n  _description = @description\n  if _description.nil?\n  else\n    \"Description\".to_yaml(__temp_93)\n    _description.to_yaml(__temp_93)\n  end\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_93)\n    _enabled.to_yaml(__temp_93)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_93)\n    _excluded.to_yaml(__temp_93)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/LargeNumbers","path":"Ameba/Rule/LargeNumbers.html","kind":"struct","full_name":"Ameba::Rule::LargeNumbers","name":"LargeNumbers","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/large_numbers.cr","line_number":30,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/large_numbers.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"MSG","value":"\"Large numbers should be written with underscores: %s\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that disallows usage of large numbers without underscore.\nThese do not affect the value of the number, but can help read\nlarge numbers more easily.\n\nFor example, these are considered invalid:\n\n```\n10000\n141592654\n5.12345\n```\n\nAnd has to be rewritten as the following:\n\n```\n10_000\n141_592_654\n5.123_45\n```\n\nYAML configuration example:\n\n```\nLargeNumbers:\n  Enabled: true\n  IntMinDigits: 5 # i.e. integers higher than 9999\n```\n","summary":"<p>A rule that disallows usage of large numbers without underscore.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that disallows usage of large numbers without underscore.\nThese do not affect the value of the number, but can help read\nlarge numbers more easily.\n\nFor example, these are considered invalid:\n\n```\n10000\n141592654\n5.12345\n```\n\nAnd has to be rewritten as the following:\n\n```\n10_000\n141_592_654\n5.123_45\n```\n\nYAML configuration example:\n\n```\nLargeNumbers:\n  Enabled: true\n  IntMinDigits: 5 # i.e. integers higher than 9999\n```\n","summary":"<p>A rule that disallows usage of large numbers without underscore.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/large_numbers.cr#L30","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/large_numbers.cr#L30","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:String)-instance-method","html_id":"description=(_description:String)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"args_string":"(_description : String)","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"int_min_digits:Int32-instance-method","html_id":"int_min_digits:Int32-instance-method","name":"int_min_digits","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":null,"source_link":null,"def":{"name":"int_min_digits","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@int_min_digits"}},{"id":"int_min_digits=(_int_min_digits:Int32)-instance-method","html_id":"int_min_digits=(_int_min_digits:Int32)-instance-method","name":"int_min_digits=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_int_min_digits","doc":null,"default_value":"","external_name":"_int_min_digits","restriction":"Int32"}],"args_string":"(_int_min_digits : Int32)","source_link":null,"source_link":null,"def":{"name":"int_min_digits=","args":[{"name":"_int_min_digits","doc":null,"default_value":"","external_name":"_int_min_digits","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@int_min_digits = _int_min_digits"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/large_numbers.cr#L38","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/large_numbers.cr#L38","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(Tokenizer.new(source)).run do |token|\n  if (token.type == (:NUMBER)) && (decimal?(token.raw))\n  else\n    next\n  end\n  parsed = parse_number(token.raw)\n  if (allowed?(*parsed)) && ((expected = underscored(*parsed)) != token.raw)\n    source.error(self, token.location, MSG % expected)\n  end\nend"}},{"id":"to_yaml(__temp_107:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_107:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_107","doc":null,"default_value":"","external_name":"__temp_107","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_107 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_107","doc":null,"default_value":"","external_name":"__temp_107","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_107.mapping(reference: self) do\n  _description = @description\n  if _description.nil?\n  else\n    \"Description\".to_yaml(__temp_107)\n    _description.to_yaml(__temp_107)\n  end\n  _int_min_digits = @int_min_digits\n  if _int_min_digits.nil?\n  else\n    \"IntMinDigits\".to_yaml(__temp_107)\n    _int_min_digits.to_yaml(__temp_107)\n  end\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_107)\n    _enabled.to_yaml(__temp_107)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_107)\n    _excluded.to_yaml(__temp_107)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/LineLength","path":"Ameba/Rule/LineLength.html","kind":"struct","full_name":"Ameba::Rule::LineLength","name":"LineLength","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/line_length.cr","line_number":12,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/line_length.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"MSG","value":"\"Line too long\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that disallows lines longer than `max_length` number of symbols.\n\nYAML configuration example:\n\n```\nLineLength:\n  Enabled: true\n  MaxLength: 100\n```\n","summary":"<p>A rule that disallows lines longer than <code><a href=\"../../Ameba/Rule/LineLength.html#max_length%3AInt32-instance-method\">#max_length</a></code> number of symbols.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that disallows lines longer than `max_length` number of symbols.\n\nYAML configuration example:\n\n```\nLineLength:\n  Enabled: true\n  MaxLength: 100\n```\n","summary":"<p>A rule that disallows lines longer than <code><a href=\"../../Ameba/Rule/LineLength.html#max_length%3AInt32-instance-method\">#max_length</a></code> number of symbols.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/line_length.cr#L12","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/line_length.cr#L12","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:String)-instance-method","html_id":"description=(_description:String)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"args_string":"(_description : String)","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"max_length:Int32-instance-method","html_id":"max_length:Int32-instance-method","name":"max_length","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":null,"source_link":null,"def":{"name":"max_length","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@max_length"}},{"id":"max_length=(_max_length:Int32)-instance-method","html_id":"max_length=(_max_length:Int32)-instance-method","name":"max_length=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_max_length","doc":null,"default_value":"","external_name":"_max_length","restriction":"Int32"}],"args_string":"(_max_length : Int32)","source_link":null,"source_link":null,"def":{"name":"max_length=","args":[{"name":"_max_length","doc":null,"default_value":"","external_name":"_max_length","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@max_length = _max_length"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/line_length.cr#L21","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/line_length.cr#L21","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"source.lines.each_with_index do |line, index|\n  if line.size > max_length\n  else\n    next\n  end\n  source.error(self, index + 1, line.size, MSG)\nend"}},{"id":"to_yaml(__temp_121:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_121:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_121","doc":null,"default_value":"","external_name":"__temp_121","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_121 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_121","doc":null,"default_value":"","external_name":"__temp_121","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_121.mapping(reference: self) do\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_121)\n    _enabled.to_yaml(__temp_121)\n  end\n  _description = @description\n  if _description.nil?\n  else\n    \"Description\".to_yaml(__temp_121)\n    _description.to_yaml(__temp_121)\n  end\n  _max_length = @max_length\n  if _max_length.nil?\n  else\n    \"MaxLength\".to_yaml(__temp_121)\n    _max_length.to_yaml(__temp_121)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_121)\n    _excluded.to_yaml(__temp_121)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/LiteralInCondition","path":"Ameba/Rule/LiteralInCondition.html","kind":"struct","full_name":"Ameba::Rule::LiteralInCondition","name":"LiteralInCondition","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/AST/Util","kind":"module","full_name":"Ameba::AST::Util","name":"Util"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/literal_in_condition.cr","line_number":23,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/literal_in_condition.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"MSG","value":"\"Literal value found in conditional\"","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/veelenga/ameba/Ameba/AST/Util","kind":"module","full_name":"Ameba::AST::Util","name":"Util"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that disallows useless conditional statements that contain a literal\nin place of a variable or predicate function.\n\nThis is because a conditional construct with a literal predicate will\nalways result in the same behaviour at run time, meaning it can be\nreplaced with either the body of the construct, or deleted entirely.\n\nThis is considered invalid:\n```\nif \"something\"\n  :ok\nend\n```\n\nYAML configuration example:\n\n```\nLiteralInCondition:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows useless conditional statements that contain a literal in place of a variable or predicate function.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that disallows useless conditional statements that contain a literal\nin place of a variable or predicate function.\n\nThis is because a conditional construct with a literal predicate will\nalways result in the same behaviour at run time, meaning it can be\nreplaced with either the body of the construct, or deleted entirely.\n\nThis is considered invalid:\n```\nif \"something\"\n  :ok\nend\n```\n\nYAML configuration example:\n\n```\nLiteralInCondition:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows useless conditional statements that contain a literal in place of a variable or predicate function.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/literal_in_condition.cr#L23","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/literal_in_condition.cr#L23","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"check_node(source,node)-instance-method","html_id":"check_node(source,node)-instance-method","name":"check_node","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""}],"args_string":"(source, node)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/literal_in_condition.cr#L37","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/literal_in_condition.cr#L37","def":{"name":"check_node","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if literal?(node.cond)\nelse\n  return\nend\nsource.error(self, node.location, MSG)\n"}},{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:String)-instance-method","html_id":"description=(_description:String)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"args_string":"(_description : String)","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"test(source,node:Crystal::If)-instance-method","html_id":"test(source,node:Crystal::If)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::If"}],"args_string":"(source, node : Crystal::If)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/literal_in_condition.cr#L42","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/literal_in_condition.cr#L42","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::If"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"check_node(source, node)"}},{"id":"test(source,node:Crystal::Unless)-instance-method","html_id":"test(source,node:Crystal::Unless)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Unless"}],"args_string":"(source, node : Crystal::Unless)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/literal_in_condition.cr#L46","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/literal_in_condition.cr#L46","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Unless"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"check_node(source, node)"}},{"id":"test(source,node:Crystal::Case)-instance-method","html_id":"test(source,node:Crystal::Case)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Case"}],"args_string":"(source, node : Crystal::Case)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/literal_in_condition.cr#L50","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/literal_in_condition.cr#L50","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Case"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"check_node(source, node)"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/literal_in_condition.cr#L33","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/literal_in_condition.cr#L33","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AST::NodeVisitor.new(self, source)"}},{"id":"to_yaml(__temp_133:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_133:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_133","doc":null,"default_value":"","external_name":"__temp_133","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_133 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_133","doc":null,"default_value":"","external_name":"__temp_133","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_133.mapping(reference: self) do\n  _description = @description\n  if _description.nil?\n  else\n    \"Description\".to_yaml(__temp_133)\n    _description.to_yaml(__temp_133)\n  end\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_133)\n    _enabled.to_yaml(__temp_133)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_133)\n    _excluded.to_yaml(__temp_133)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/LiteralInInterpolation","path":"Ameba/Rule/LiteralInInterpolation.html","kind":"struct","full_name":"Ameba::Rule::LiteralInInterpolation","name":"LiteralInInterpolation","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/AST/Util","kind":"module","full_name":"Ameba::AST::Util","name":"Util"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/literal_in_interpolation.cr","line_number":19,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/literal_in_interpolation.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"MSG","value":"\"Literal value found in interpolation\"","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/veelenga/ameba/Ameba/AST/Util","kind":"module","full_name":"Ameba::AST::Util","name":"Util"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that disallows useless string interpolations\nthat contain a literal value instead of a variable or function.\n\nFor example:\n\n```\n\"Hello, #{:Ary}\"\n\"There are #{4} cats\"\n```\n\nYAML configuration example:\n\n```\nLiteralInInterpolation\n  Enabled: true\n```\n","summary":"<p>A rule that disallows useless string interpolations that contain a literal value instead of a variable or function.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that disallows useless string interpolations\nthat contain a literal value instead of a variable or function.\n\nFor example:\n\n```\n\"Hello, #{:Ary}\"\n\"There are #{4} cats\"\n```\n\nYAML configuration example:\n\n```\nLiteralInInterpolation\n  Enabled: true\n```\n","summary":"<p>A rule that disallows useless string interpolations that contain a literal value instead of a variable or function.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/literal_in_interpolation.cr#L19","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/literal_in_interpolation.cr#L19","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:String)-instance-method","html_id":"description=(_description:String)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"args_string":"(_description : String)","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"test(source,node:Crystal::StringInterpolation)-instance-method","html_id":"test(source,node:Crystal::StringInterpolation)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::StringInterpolation"}],"args_string":"(source, node : Crystal::StringInterpolation)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/literal_in_interpolation.cr#L32","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/literal_in_interpolation.cr#L32","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::StringInterpolation"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"found = node.expressions.any? do |e|\n  (!(string_literal?(e))) && (literal?(e))\nend\nif found\nelse\n  return\nend\nsource.error(self, node.location, MSG)\n"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/literal_in_interpolation.cr#L28","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/literal_in_interpolation.cr#L28","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AST::NodeVisitor.new(self, source)"}},{"id":"to_yaml(__temp_145:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_145:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_145","doc":null,"default_value":"","external_name":"__temp_145","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_145 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_145","doc":null,"default_value":"","external_name":"__temp_145","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_145.mapping(reference: self) do\n  _description = @description\n  if _description.nil?\n  else\n    \"Description\".to_yaml(__temp_145)\n    _description.to_yaml(__temp_145)\n  end\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_145)\n    _enabled.to_yaml(__temp_145)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_145)\n    _excluded.to_yaml(__temp_145)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/MethodNames","path":"Ameba/Rule/MethodNames.html","kind":"struct","full_name":"Ameba::Rule::MethodNames","name":"MethodNames","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/method_names.cr","line_number":41,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/method_names.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"MSG","value":"\"Method name should be underscore-cased: %s, not %s\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that enforces method names to be in underscored case.\n\nFor example, these are considered valid:\n\n```\nclass Person\n  def first_name\n  end\n\n  def date_of_birth\n  end\n\n  def homepage_url\n  end\nend\n```\n\nAnd these are invalid method names:\n\n```\nclass Person\n  def firstName\n  end\n\n  def date_of_Birth\n  end\n\n  def homepageURL\n  end\nend\n```\n\nYAML configuration example:\n\n```\nMethodNames:\n  Enabled: true\n```\n","summary":"<p>A rule that enforces method names to be in underscored case.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that enforces method names to be in underscored case.\n\nFor example, these are considered valid:\n\n```\nclass Person\n  def first_name\n  end\n\n  def date_of_birth\n  end\n\n  def homepage_url\n  end\nend\n```\n\nAnd these are invalid method names:\n\n```\nclass Person\n  def firstName\n  end\n\n  def date_of_Birth\n  end\n\n  def homepageURL\n  end\nend\n```\n\nYAML configuration example:\n\n```\nMethodNames:\n  Enabled: true\n```\n","summary":"<p>A rule that enforces method names to be in underscored case.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/method_names.cr#L41","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/method_names.cr#L41","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:String)-instance-method","html_id":"description=(_description:String)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"args_string":"(_description : String)","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"test(source,node:Crystal::Def)-instance-method","html_id":"test(source,node:Crystal::Def)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Def"}],"args_string":"(source, node : Crystal::Def)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/method_names.cr#L52","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/method_names.cr#L52","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Def"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (expected = node.name.underscore) == node.name\n  return\nend\nsource.error(self, node.location, sprintf(MSG, expected, node.name))\n"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/method_names.cr#L48","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/method_names.cr#L48","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AST::NodeVisitor.new(self, source)"}},{"id":"to_yaml(__temp_157:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_157:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_157","doc":null,"default_value":"","external_name":"__temp_157","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_157 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_157","doc":null,"default_value":"","external_name":"__temp_157","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_157.mapping(reference: self) do\n  _description = @description\n  if _description.nil?\n  else\n    \"Description\".to_yaml(__temp_157)\n    _description.to_yaml(__temp_157)\n  end\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_157)\n    _enabled.to_yaml(__temp_157)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_157)\n    _excluded.to_yaml(__temp_157)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/NegatedConditionsInUnless","path":"Ameba/Rule/NegatedConditionsInUnless.html","kind":"struct","full_name":"Ameba::Rule::NegatedConditionsInUnless","name":"NegatedConditionsInUnless","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/negated_conditions_in_unless.cr","line_number":30,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/negated_conditions_in_unless.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"MSG","value":"\"Avoid negated conditions in unless blocks\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that disallows negated conditions in unless.\n\nFor example, this is considered invalid:\n\n```\nunless !s.empty?\n  :ok\nend\n```\n\nAnd should be rewritten to the following:\n\n```\nif s.emtpy?\n  :ok\nend\n```\n\nIt is pretty difficult to wrap your head around a block of code\nthat is executed if a negated condition is NOT met.\n\nYAML configuration example:\n\n```\nNegatedConditionsInUnless:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows negated conditions in unless.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that disallows negated conditions in unless.\n\nFor example, this is considered invalid:\n\n```\nunless !s.empty?\n  :ok\nend\n```\n\nAnd should be rewritten to the following:\n\n```\nif s.emtpy?\n  :ok\nend\n```\n\nIt is pretty difficult to wrap your head around a block of code\nthat is executed if a negated condition is NOT met.\n\nYAML configuration example:\n\n```\nNegatedConditionsInUnless:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows negated conditions in unless.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/negated_conditions_in_unless.cr#L30","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/negated_conditions_in_unless.cr#L30","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:String)-instance-method","html_id":"description=(_description:String)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"args_string":"(_description : String)","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"test(source,node:Crystal::Unless)-instance-method","html_id":"test(source,node:Crystal::Unless)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Unless"}],"args_string":"(source, node : Crystal::Unless)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/negated_conditions_in_unless.cr#L41","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/negated_conditions_in_unless.cr#L41","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Unless"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if negated_condition?(node.cond)\nelse\n  return\nend\nsource.error(self, node.location, MSG)\n"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/negated_conditions_in_unless.cr#L37","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/negated_conditions_in_unless.cr#L37","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AST::NodeVisitor.new(self, source)"}},{"id":"to_yaml(__temp_169:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_169:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_169","doc":null,"default_value":"","external_name":"__temp_169","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_169 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_169","doc":null,"default_value":"","external_name":"__temp_169","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_169.mapping(reference: self) do\n  _description = @description\n  if _description.nil?\n  else\n    \"Description\".to_yaml(__temp_169)\n    _description.to_yaml(__temp_169)\n  end\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_169)\n    _enabled.to_yaml(__temp_169)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_169)\n    _excluded.to_yaml(__temp_169)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/PercentArrays","path":"Ameba/Rule/PercentArrays.html","kind":"struct","full_name":"Ameba::Rule::PercentArrays","name":"PercentArrays","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/percent_arrays.cr","line_number":27,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/percent_arrays.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"MSG","value":"\"Symbols `%s` may be unwanted in %s array literals\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that disallows some unwanted symbols in percent array literals.\n\nFor example, this is usually written by mistake:\n\n```\n%i(:one, :two)\n%w(\"one\", \"two\")\n```\n\nAnd the expected example is:\n\n```\n%i(one two)\n%w(one two)\n```\n\nYAML configuration example:\n\n```\nPercentArrays:\n  Enabled: true\n  StringArrayUnwantedSymbols: ',\"'\n  SymbolArrayUnwantedSymbols: ',:'\n```\n","summary":"<p>A rule that disallows some unwanted symbols in percent array literals.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that disallows some unwanted symbols in percent array literals.\n\nFor example, this is usually written by mistake:\n\n```\n%i(:one, :two)\n%w(\"one\", \"two\")\n```\n\nAnd the expected example is:\n\n```\n%i(one two)\n%w(one two)\n```\n\nYAML configuration example:\n\n```\nPercentArrays:\n  Enabled: true\n  StringArrayUnwantedSymbols: ',\"'\n  SymbolArrayUnwantedSymbols: ',:'\n```\n","summary":"<p>A rule that disallows some unwanted symbols in percent array literals.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/percent_arrays.cr#L27","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/percent_arrays.cr#L27","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:String)-instance-method","html_id":"description=(_description:String)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"args_string":"(_description : String)","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"string_array_unwanted_symbols:String-instance-method","html_id":"string_array_unwanted_symbols:String-instance-method","name":"string_array_unwanted_symbols","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"string_array_unwanted_symbols","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@string_array_unwanted_symbols"}},{"id":"string_array_unwanted_symbols=(_string_array_unwanted_symbols:String)-instance-method","html_id":"string_array_unwanted_symbols=(_string_array_unwanted_symbols:String)-instance-method","name":"string_array_unwanted_symbols=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_string_array_unwanted_symbols","doc":null,"default_value":"","external_name":"_string_array_unwanted_symbols","restriction":"String"}],"args_string":"(_string_array_unwanted_symbols : String)","source_link":null,"source_link":null,"def":{"name":"string_array_unwanted_symbols=","args":[{"name":"_string_array_unwanted_symbols","doc":null,"default_value":"","external_name":"_string_array_unwanted_symbols","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@string_array_unwanted_symbols = _string_array_unwanted_symbols"}},{"id":"symbol_array_unwanted_symbols:String-instance-method","html_id":"symbol_array_unwanted_symbols:String-instance-method","name":"symbol_array_unwanted_symbols","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"symbol_array_unwanted_symbols","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@symbol_array_unwanted_symbols"}},{"id":"symbol_array_unwanted_symbols=(_symbol_array_unwanted_symbols:String)-instance-method","html_id":"symbol_array_unwanted_symbols=(_symbol_array_unwanted_symbols:String)-instance-method","name":"symbol_array_unwanted_symbols=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_symbol_array_unwanted_symbols","doc":null,"default_value":"","external_name":"_symbol_array_unwanted_symbols","restriction":"String"}],"args_string":"(_symbol_array_unwanted_symbols : String)","source_link":null,"source_link":null,"def":{"name":"symbol_array_unwanted_symbols=","args":[{"name":"_symbol_array_unwanted_symbols","doc":null,"default_value":"","external_name":"_symbol_array_unwanted_symbols","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@symbol_array_unwanted_symbols = _symbol_array_unwanted_symbols"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/percent_arrays.cr#L36","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/percent_arrays.cr#L36","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"error = start_token = nil\n(Tokenizer.new(source)).run do |token|\n  case token.type\n  when :STRING_ARRAY_START, :SYMBOL_ARRAY_START\n    start_token = token.dup\n  when :STRING\n    if start_token && (error.nil?)\n      error = array_entry_invalid?(token.value, start_token.not_nil!.raw)\n    end\n  when :STRING_ARRAY_END, :SYMBOL_ARRAY_END\n    if error\n      source.error(self, start_token.try(&.location), error.not_nil!)\n    end\n    error = start_token = nil\n  end\nend\n"}},{"id":"to_yaml(__temp_185:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_185:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_185","doc":null,"default_value":"","external_name":"__temp_185","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_185 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_185","doc":null,"default_value":"","external_name":"__temp_185","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_185.mapping(reference: self) do\n  _description = @description\n  if _description.nil?\n  else\n    \"Description\".to_yaml(__temp_185)\n    _description.to_yaml(__temp_185)\n  end\n  _string_array_unwanted_symbols = @string_array_unwanted_symbols\n  if _string_array_unwanted_symbols.nil?\n  else\n    \"StringArrayUnwantedSymbols\".to_yaml(__temp_185)\n    _string_array_unwanted_symbols.to_yaml(__temp_185)\n  end\n  _symbol_array_unwanted_symbols = @symbol_array_unwanted_symbols\n  if _symbol_array_unwanted_symbols.nil?\n  else\n    \"SymbolArrayUnwantedSymbols\".to_yaml(__temp_185)\n    _symbol_array_unwanted_symbols.to_yaml(__temp_185)\n  end\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_185)\n    _enabled.to_yaml(__temp_185)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_185)\n    _excluded.to_yaml(__temp_185)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/PredicateName","path":"Ameba/Rule/PredicateName.html","kind":"struct","full_name":"Ameba::Rule::PredicateName","name":"PredicateName","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/predicate_name.cr","line_number":32,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/predicate_name.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"MSG","value":"\"Favour method name '%s?' over '%s'\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that disallows tautological predicate names, meaning those that\nstart with the prefix `has_` or the prefix `is_`. Ignores if the alternative isn't valid Crystal code (e.g. `is_404?`).\n\nFavour these:\n\n```\ndef valid?(x)\nend\n\ndef picture?(x)\nend\n```\n\nOver these:\n\n```\ndef is_valid?(x)\nend\n\ndef has_picture?(x)\nend\n```\n\nYAML configuration example:\n\n```\nPredicateName:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows tautological predicate names, meaning those that start with the prefix <code>has_</code> or the prefix <code>is_</code>.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that disallows tautological predicate names, meaning those that\nstart with the prefix `has_` or the prefix `is_`. Ignores if the alternative isn't valid Crystal code (e.g. `is_404?`).\n\nFavour these:\n\n```\ndef valid?(x)\nend\n\ndef picture?(x)\nend\n```\n\nOver these:\n\n```\ndef is_valid?(x)\nend\n\ndef has_picture?(x)\nend\n```\n\nYAML configuration example:\n\n```\nPredicateName:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows tautological predicate names, meaning those that start with the prefix <code>has_</code> or the prefix <code>is_</code>.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/predicate_name.cr#L32","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/predicate_name.cr#L32","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:String)-instance-method","html_id":"description=(_description:String)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"args_string":"(_description : String)","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"test(source,node:Crystal::Def)-instance-method","html_id":"test(source,node:Crystal::Def)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Def"}],"args_string":"(source, node : Crystal::Def)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/predicate_name.cr#L43","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/predicate_name.cr#L43","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Def"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if node.name =~ (/^(is|has)_(\\w+)\\?/)\n  alternative = $~[2]\n  if alternative =~ (/^[a-z][a-zA-Z_0-9]*$/)\n  else\n    return\n  end\n  source.error(self, node.location, sprintf(MSG, alternative, node.name))\nend"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/predicate_name.cr#L39","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/predicate_name.cr#L39","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AST::NodeVisitor.new(self, source)"}},{"id":"to_yaml(__temp_197:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_197:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_197","doc":null,"default_value":"","external_name":"__temp_197","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_197 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_197","doc":null,"default_value":"","external_name":"__temp_197","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_197.mapping(reference: self) do\n  _description = @description\n  if _description.nil?\n  else\n    \"Description\".to_yaml(__temp_197)\n    _description.to_yaml(__temp_197)\n  end\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_197)\n    _enabled.to_yaml(__temp_197)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_197)\n    _excluded.to_yaml(__temp_197)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/RandZero","path":"Ameba/Rule/RandZero.html","kind":"struct","full_name":"Ameba::Rule::RandZero","name":"RandZero","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/rand_zero.cr","line_number":26,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/rand_zero.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"MSG","value":"\"%s always returns 0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that disallows `rand(0)` and `rand(1)` calls.\nSuch calls always return `0`.\n\nFor example:\n\n```\nrand(1)\n```\n\nShould be written as:\n\n```\nrand\n# or\nrand(2)\n```\n\nYAML configuration example:\n\n```\nRandZero:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows <code>rand(0)</code> and <code>rand(1)</code> calls.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that disallows `rand(0)` and `rand(1)` calls.\nSuch calls always return `0`.\n\nFor example:\n\n```\nrand(1)\n```\n\nShould be written as:\n\n```\nrand\n# or\nrand(2)\n```\n\nYAML configuration example:\n\n```\nRandZero:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows <code>rand(0)</code> and <code>rand(1)</code> calls.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/rand_zero.cr#L26","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/rand_zero.cr#L26","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:String)-instance-method","html_id":"description=(_description:String)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"args_string":"(_description : String)","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"test(source,node:Crystal::Call)-instance-method","html_id":"test(source,node:Crystal::Call)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Call"}],"args_string":"(source, node : Crystal::Call)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/rand_zero.cr#L37","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/rand_zero.cr#L37","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Call"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (((((node.name == \"rand\") && (node.args.size == 1)) && (arg = node.args.first)) && (arg.is_a?(Crystal::NumberLiteral))) && (value = arg.value)) && ((value == \"0\") || (value == \"1\"))\nelse\n  return\nend\nsource.error(self, node.location, MSG % node)\n"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/rand_zero.cr#L33","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/rand_zero.cr#L33","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AST::NodeVisitor.new(self, source)"}},{"id":"to_yaml(__temp_209:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_209:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_209","doc":null,"default_value":"","external_name":"__temp_209","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_209 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_209","doc":null,"default_value":"","external_name":"__temp_209","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_209.mapping(reference: self) do\n  _description = @description\n  if _description.nil?\n  else\n    \"Description\".to_yaml(__temp_209)\n    _description.to_yaml(__temp_209)\n  end\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_209)\n    _enabled.to_yaml(__temp_209)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_209)\n    _excluded.to_yaml(__temp_209)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/RedundantBegin","path":"Ameba/Rule/RedundantBegin.html","kind":"struct","full_name":"Ameba::Rule::RedundantBegin","name":"RedundantBegin","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/AST/Util","kind":"module","full_name":"Ameba::AST::Util","name":"Util"},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/redundant_begin.cr","line_number":59,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/redundant_begin.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"MSG","value":"\"Redundant `begin` block detected\"","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/veelenga/ameba/Ameba/AST/Util","kind":"module","full_name":"Ameba::AST::Util","name":"Util"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that disallows redundant begin blocks.\n\nCurrently it is able to detect:\n\n1. Exception handler block that can be used as a part of the method.\n\nFor example, this:\n\n```\ndef method\n  begin\n    read_content\n  rescue\n    close_file\n  end\nend\n```\n\nshould be rewritten as:\n\n```\ndef method\n  read_content\nrescue\n  close_file\nend\n```\n\n2. begin..end block as a top level block in a method.\n\nFor example this is considered invalid:\n\n```\ndef method\n  begin\n    a = 1\n    b = 2\n  end\nend\n```\n\nand has to be written as the following:\n\n```\ndef method\n  a = 1\n  b = 2\nend\n```\n\nYAML configuration example:\n\n```\nRedundantBegin:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows redundant begin blocks.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that disallows redundant begin blocks.\n\nCurrently it is able to detect:\n\n1. Exception handler block that can be used as a part of the method.\n\nFor example, this:\n\n```\ndef method\n  begin\n    read_content\n  rescue\n    close_file\n  end\nend\n```\n\nshould be rewritten as:\n\n```\ndef method\n  read_content\nrescue\n  close_file\nend\n```\n\n2. begin..end block as a top level block in a method.\n\nFor example this is considered invalid:\n\n```\ndef method\n  begin\n    a = 1\n    b = 2\n  end\nend\n```\n\nand has to be written as the following:\n\n```\ndef method\n  a = 1\n  b = 2\nend\n```\n\nYAML configuration example:\n\n```\nRedundantBegin:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows redundant begin blocks.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/redundant_begin.cr#L59","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/redundant_begin.cr#L59","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:String)-instance-method","html_id":"description=(_description:String)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"args_string":"(_description : String)","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"test(source,node:Crystal::Def)-instance-method","html_id":"test(source,node:Crystal::Def)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Def"}],"args_string":"(source, node : Crystal::Def)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/redundant_begin.cr#L71","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/redundant_begin.cr#L71","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Def"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if redundant_begin?(source, node)\nelse\n  return\nend\nsource.error(self, node.location, MSG)\n"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/redundant_begin.cr#L67","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/redundant_begin.cr#L67","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AST::NodeVisitor.new(self, source)"}},{"id":"to_yaml(__temp_221:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_221:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_221","doc":null,"default_value":"","external_name":"__temp_221","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_221 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_221","doc":null,"default_value":"","external_name":"__temp_221","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_221.mapping(reference: self) do\n  _description = @description\n  if _description.nil?\n  else\n    \"Description\".to_yaml(__temp_221)\n    _description.to_yaml(__temp_221)\n  end\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_221)\n    _enabled.to_yaml(__temp_221)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_221)\n    _excluded.to_yaml(__temp_221)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/ShadowedException","path":"Ameba/Rule/ShadowedException.html","kind":"struct","full_name":"Ameba::Rule::ShadowedException","name":"ShadowedException","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/shadowed_exception.cr","line_number":37,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/shadowed_exception.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"MSG","value":"\"Exception handler has shadowed exceptions: %s\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that disallows a rescued exception that get shadowed by a\nless specific exception being rescued before a more specific\nexception is rescued.\n\nFor example, this is invalid:\n\n```\nbegin\n  do_something\nrescue Exception\n  handle_exception\nrescue ArgumentError\n  handle_argument_error_exception\nend\n```\n\nAnd it has to be written as follows:\n\n```\nbegin\n  do_something\nrescue ArgumentError\n  handle_argument_error_exception\nrescue Exception\n  handle_exception\nend\n```\n\nYAML configuration example:\n\n```\nShadowedException:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows a rescued exception that get shadowed by a less specific exception being rescued before a more specific exception is rescued.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that disallows a rescued exception that get shadowed by a\nless specific exception being rescued before a more specific\nexception is rescued.\n\nFor example, this is invalid:\n\n```\nbegin\n  do_something\nrescue Exception\n  handle_exception\nrescue ArgumentError\n  handle_argument_error_exception\nend\n```\n\nAnd it has to be written as follows:\n\n```\nbegin\n  do_something\nrescue ArgumentError\n  handle_argument_error_exception\nrescue Exception\n  handle_exception\nend\n```\n\nYAML configuration example:\n\n```\nShadowedException:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows a rescued exception that get shadowed by a less specific exception being rescued before a more specific exception is rescued.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/shadowed_exception.cr#L37","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/shadowed_exception.cr#L37","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:String)-instance-method","html_id":"description=(_description:String)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"args_string":"(_description : String)","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"test(source,node:Crystal::ExceptionHandler)-instance-method","html_id":"test(source,node:Crystal::ExceptionHandler)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ExceptionHandler"}],"args_string":"(source, node : Crystal::ExceptionHandler)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/shadowed_exception.cr#L48","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/shadowed_exception.cr#L48","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ExceptionHandler"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if excs = node.rescues\nelse\n  return\nend\nif (excs = shadowed(excs.map(&.types))).any?\n  source.error(self, node.location, MSG % (excs.join(\", \")))\nend\n"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/shadowed_exception.cr#L44","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/shadowed_exception.cr#L44","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AST::NodeVisitor.new(self, source)"}},{"id":"to_yaml(__temp_233:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_233:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_233","doc":null,"default_value":"","external_name":"__temp_233","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_233 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_233","doc":null,"default_value":"","external_name":"__temp_233","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_233.mapping(reference: self) do\n  _description = @description\n  if _description.nil?\n  else\n    \"Description\".to_yaml(__temp_233)\n    _description.to_yaml(__temp_233)\n  end\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_233)\n    _enabled.to_yaml(__temp_233)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_233)\n    _excluded.to_yaml(__temp_233)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Syntax","path":"Ameba/Rule/Syntax.html","kind":"struct","full_name":"Ameba::Rule::Syntax","name":"Syntax","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/syntax.cr","line_number":22,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/syntax.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that reports invalid Crystal syntax.\n\nFor example, this syntax is invalid:\n\n```\ndef hello\n  do_something\nrescue Exception => e\nend\n```\n\nAnd should be properly written:\n\n```\ndef hello\n  do_something\nrescue e : Exception\nend\n```\n","summary":"<p>A rule that reports invalid Crystal syntax.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that reports invalid Crystal syntax.\n\nFor example, this syntax is invalid:\n\n```\ndef hello\n  do_something\nrescue Exception => e\nend\n```\n\nAnd should be properly written:\n\n```\ndef hello\n  do_something\nrescue e : Exception\nend\n```\n","summary":"<p>A rule that reports invalid Crystal syntax.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/syntax.cr#L22","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/syntax.cr#L22","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/syntax.cr#L23","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/syntax.cr#L23","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  source.ast\nrescue e : Crystal::SyntaxException\n  source.error(self, e.line_number, e.column_number, e.message.to_s)\nend"}},{"id":"to_yaml(__temp_238:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_238:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_238","doc":null,"default_value":"","external_name":"__temp_238","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_238 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_238","doc":null,"default_value":"","external_name":"__temp_238","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_238.mapping(reference: self) do\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_238)\n    _enabled.to_yaml(__temp_238)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_238)\n    _excluded.to_yaml(__temp_238)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/TrailingBlankLines","path":"Ameba/Rule/TrailingBlankLines.html","kind":"struct","full_name":"Ameba::Rule::TrailingBlankLines","name":"TrailingBlankLines","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/trailing_blank_lines.cr","line_number":11,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/trailing_blank_lines.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"MSG","value":"\"Blank lines detected at the end of the file\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that disallows trailing blank lines at the end of the source file.\n\nYAML configuration example:\n\n```\nTrailingBlankLines:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows trailing blank lines at the end of the source file.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that disallows trailing blank lines at the end of the source file.\n\nYAML configuration example:\n\n```\nTrailingBlankLines:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows trailing blank lines at the end of the source file.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/trailing_blank_lines.cr#L11","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/trailing_blank_lines.cr#L11","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:String)-instance-method","html_id":"description=(_description:String)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"args_string":"(_description : String)","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/trailing_blank_lines.cr#L18","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/trailing_blank_lines.cr#L18","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if source.lines.size > 1 && source.lines[-2, 2].join.strip.empty?\n  source.error(self, source.lines.size, 1, MSG)\nend"}},{"id":"to_yaml(__temp_250:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_250:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_250","doc":null,"default_value":"","external_name":"__temp_250","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_250 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_250","doc":null,"default_value":"","external_name":"__temp_250","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_250.mapping(reference: self) do\n  _description = @description\n  if _description.nil?\n  else\n    \"Description\".to_yaml(__temp_250)\n    _description.to_yaml(__temp_250)\n  end\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_250)\n    _enabled.to_yaml(__temp_250)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_250)\n    _excluded.to_yaml(__temp_250)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/TrailingWhitespace","path":"Ameba/Rule/TrailingWhitespace.html","kind":"struct","full_name":"Ameba::Rule::TrailingWhitespace","name":"TrailingWhitespace","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/trailing_whitespace.cr","line_number":11,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/trailing_whitespace.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"MSG","value":"\"Trailing whitespace detected\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that disallows trailing whitespaces.\n\nYAML configuration example:\n\n```\nTrailingWhitespace:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows trailing whitespaces.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that disallows trailing whitespaces.\n\nYAML configuration example:\n\n```\nTrailingWhitespace:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows trailing whitespaces.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/trailing_whitespace.cr#L11","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/trailing_whitespace.cr#L11","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:String)-instance-method","html_id":"description=(_description:String)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"args_string":"(_description : String)","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/trailing_whitespace.cr#L18","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/trailing_whitespace.cr#L18","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"source.lines.each_with_index do |line, index|\n  if line =~ (/\\s$/)\n  else\n    next\n  end\n  source.error(self, index + 1, line.size, MSG)\nend"}},{"id":"to_yaml(__temp_262:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_262:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_262","doc":null,"default_value":"","external_name":"__temp_262","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_262 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_262","doc":null,"default_value":"","external_name":"__temp_262","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_262.mapping(reference: self) do\n  _description = @description\n  if _description.nil?\n  else\n    \"Description\".to_yaml(__temp_262)\n    _description.to_yaml(__temp_262)\n  end\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_262)\n    _enabled.to_yaml(__temp_262)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_262)\n    _excluded.to_yaml(__temp_262)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/TypeNames","path":"Ameba/Rule/TypeNames.html","kind":"struct","full_name":"Ameba::Rule::TypeNames","name":"TypeNames","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/type_names.cr","line_number":55,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/type_names.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"MSG","value":"\"Type name should be camelcased: %s, but it was %s\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that enforces type names in camelcase manner.\n\nFor example, these are considered valid:\n\n```\nclass ParseError < Exception\nend\n\nmodule HTTP\n  class RequestHandler\n  end\nend\n\nalias NumericValue = Float32 | Float64 | Int32 | Int64\n\nlib LibYAML\nend\n\nstruct TagDirective\nend\n\nenum Time::DayOfWeek\nend\n```\n\nAnd these are invalid type names\n\n```\nclass My_class\nend\n\nmodule HTT_p\nend\n\nalias Numeric_value = Int32\n\nlib Lib_YAML\nend\n\nstruct Tag_directive\nend\n\nenum Time_enum::Day_of_week\nend\n```\n\nYAML configuration example:\n\n```\nTypeNames:\n  Enabled: true\n```\n","summary":"<p>A rule that enforces type names in camelcase manner.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that enforces type names in camelcase manner.\n\nFor example, these are considered valid:\n\n```\nclass ParseError < Exception\nend\n\nmodule HTTP\n  class RequestHandler\n  end\nend\n\nalias NumericValue = Float32 | Float64 | Int32 | Int64\n\nlib LibYAML\nend\n\nstruct TagDirective\nend\n\nenum Time::DayOfWeek\nend\n```\n\nAnd these are invalid type names\n\n```\nclass My_class\nend\n\nmodule HTT_p\nend\n\nalias Numeric_value = Int32\n\nlib Lib_YAML\nend\n\nstruct Tag_directive\nend\n\nenum Time_enum::Day_of_week\nend\n```\n\nYAML configuration example:\n\n```\nTypeNames:\n  Enabled: true\n```\n","summary":"<p>A rule that enforces type names in camelcase manner.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/type_names.cr#L55","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/type_names.cr#L55","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:String)-instance-method","html_id":"description=(_description:String)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"args_string":"(_description : String)","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"test(source,node:Crystal::ClassDef)-instance-method","html_id":"test(source,node:Crystal::ClassDef)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ClassDef"}],"args_string":"(source, node : Crystal::ClassDef)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/type_names.cr#L74","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/type_names.cr#L74","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ClassDef"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"check_node(source, node)"}},{"id":"test(source,node:Crystal::Alias)-instance-method","html_id":"test(source,node:Crystal::Alias)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Alias"}],"args_string":"(source, node : Crystal::Alias)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/type_names.cr#L78","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/type_names.cr#L78","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Alias"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"check_node(source, node)"}},{"id":"test(source,node:Crystal::LibDef)-instance-method","html_id":"test(source,node:Crystal::LibDef)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::LibDef"}],"args_string":"(source, node : Crystal::LibDef)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/type_names.cr#L82","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/type_names.cr#L82","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::LibDef"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"check_node(source, node)"}},{"id":"test(source,node:Crystal::EnumDef)-instance-method","html_id":"test(source,node:Crystal::EnumDef)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::EnumDef"}],"args_string":"(source, node : Crystal::EnumDef)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/type_names.cr#L86","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/type_names.cr#L86","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::EnumDef"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"check_node(source, node)"}},{"id":"test(source,node:Crystal::ModuleDef)-instance-method","html_id":"test(source,node:Crystal::ModuleDef)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ModuleDef"}],"args_string":"(source, node : Crystal::ModuleDef)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/type_names.cr#L90","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/type_names.cr#L90","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ModuleDef"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"check_node(source, node)"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/type_names.cr#L62","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/type_names.cr#L62","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AST::NodeVisitor.new(self, source)"}},{"id":"to_yaml(__temp_274:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_274:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_274","doc":null,"default_value":"","external_name":"__temp_274","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_274 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_274","doc":null,"default_value":"","external_name":"__temp_274","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_274.mapping(reference: self) do\n  _description = @description\n  if _description.nil?\n  else\n    \"Description\".to_yaml(__temp_274)\n    _description.to_yaml(__temp_274)\n  end\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_274)\n    _enabled.to_yaml(__temp_274)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_274)\n    _excluded.to_yaml(__temp_274)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/UnlessElse","path":"Ameba/Rule/UnlessElse.html","kind":"struct","full_name":"Ameba::Rule::UnlessElse","name":"UnlessElse","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/unless_else.cr","line_number":46,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/unless_else.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"MSG","value":"\"Favour if over unless with else\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that disallows the use of an `else` block with the `unless`.\n\nFor example, the rule considers these valid:\n\n```\nunless something\n  :ok\nend\n\nif something\n  :one\nelse\n  :two\nend\n```\n\nBut it considers this one invalid as it is an `unless` with an `else`:\n\n```\nunless something\n  :one\nelse\n  :two\nend\n```\n\nThe solution is to swap the order of the blocks, and change the `unless` to\nan `if`, so the previous invalid example would become this:\n\n```\nif something\n  :two\nelse\n  :one\nend\n```\n\nYAML configuration example:\n\n```\nUnlessElse:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows the use of an <code>else</code> block with the <code>unless</code>.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that disallows the use of an `else` block with the `unless`.\n\nFor example, the rule considers these valid:\n\n```\nunless something\n  :ok\nend\n\nif something\n  :one\nelse\n  :two\nend\n```\n\nBut it considers this one invalid as it is an `unless` with an `else`:\n\n```\nunless something\n  :one\nelse\n  :two\nend\n```\n\nThe solution is to swap the order of the blocks, and change the `unless` to\nan `if`, so the previous invalid example would become this:\n\n```\nif something\n  :two\nelse\n  :one\nend\n```\n\nYAML configuration example:\n\n```\nUnlessElse:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows the use of an <code>else</code> block with the <code>unless</code>.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/unless_else.cr#L46","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/unless_else.cr#L46","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:String)-instance-method","html_id":"description=(_description:String)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"args_string":"(_description : String)","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"test(source,node:Crystal::Unless)-instance-method","html_id":"test(source,node:Crystal::Unless)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Unless"}],"args_string":"(source, node : Crystal::Unless)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/unless_else.cr#L57","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/unless_else.cr#L57","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Unless"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if node.else.nop?\n  return\nend\nsource.error(self, node.location, MSG)\n"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/unless_else.cr#L53","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/unless_else.cr#L53","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AST::NodeVisitor.new(self, source)"}},{"id":"to_yaml(__temp_286:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_286:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_286","doc":null,"default_value":"","external_name":"__temp_286","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_286 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_286","doc":null,"default_value":"","external_name":"__temp_286","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_286.mapping(reference: self) do\n  _description = @description\n  if _description.nil?\n  else\n    \"Description\".to_yaml(__temp_286)\n    _description.to_yaml(__temp_286)\n  end\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_286)\n    _enabled.to_yaml(__temp_286)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_286)\n    _excluded.to_yaml(__temp_286)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/UnneededDisableDirective","path":"Ameba/Rule/UnneededDisableDirective.html","kind":"struct","full_name":"Ameba::Rule::UnneededDisableDirective","name":"UnneededDisableDirective","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/unneeded_disable_directive.cr","line_number":21,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/unneeded_disable_directive.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"MSG","value":"\"Unnecessary disabling of %s\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that reports unneeded disable directives.\nFor example, this is considered invalid:\n\n```\n# ameba:disable PredicateName\ndef comment?\n  do_something\nend\n```\n\nas the predicate name is correct and the comment directive does not\nhave any effect, the snippet should be written as the following:\n\n```\ndef comment?\n  do_something\nend\n```\n","summary":"<p>A rule that reports unneeded disable directives.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that reports unneeded disable directives.\nFor example, this is considered invalid:\n\n```\n# ameba:disable PredicateName\ndef comment?\n  do_something\nend\n```\n\nas the predicate name is correct and the comment directive does not\nhave any effect, the snippet should be written as the following:\n\n```\ndef comment?\n  do_something\nend\n```\n","summary":"<p>A rule that reports unneeded disable directives.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/unneeded_disable_directive.cr#L21","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/unneeded_disable_directive.cr#L21","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:String)-instance-method","html_id":"description=(_description:String)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"args_string":"(_description : String)","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/unneeded_disable_directive.cr#L28","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/unneeded_disable_directive.cr#L28","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(Tokenizer.new(source)).run do |token|\n  if token.type == (:COMMENT)\n  else\n    next\n  end\n  if directive = source.parse_inline_directive(token.value.to_s)\n  else\n    next\n  end\n  if names = unneeded_disables(source, directive, token.location)\n  else\n    next\n  end\n  if names.any?\n  else\n    next\n  end\n  source.error(self, token.location, MSG % (names.join(\", \")))\nend"}},{"id":"to_yaml(__temp_298:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_298:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_298","doc":null,"default_value":"","external_name":"__temp_298","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_298 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_298","doc":null,"default_value":"","external_name":"__temp_298","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_298.mapping(reference: self) do\n  _description = @description\n  if _description.nil?\n  else\n    \"Description\".to_yaml(__temp_298)\n    _description.to_yaml(__temp_298)\n  end\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_298)\n    _enabled.to_yaml(__temp_298)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_298)\n    _excluded.to_yaml(__temp_298)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/UnusedArgument","path":"Ameba/Rule/UnusedArgument.html","kind":"struct","full_name":"Ameba::Rule::UnusedArgument","name":"UnusedArgument","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/unused_argument.cr","line_number":28,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/unused_argument.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"MSG","value":"\"Unused argument `%s`\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that reports unused arguments.\nFor example, this is considered invalid:\n\n```\ndef method(a, b, c)\n  a + b\nend\n```\nand should be written as:\n\n```\ndef method(a, b)\n  a + b\nend\n```\n\nYAML configuration example:\n\n```\nUnusedArgument:\n  Enabled: true\n  IgnoreDefs: true\n  IgnoreBlocks: false\n  IgnoreProcs: false\n```\n","summary":"<p>A rule that reports unused arguments.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that reports unused arguments.\nFor example, this is considered invalid:\n\n```\ndef method(a, b, c)\n  a + b\nend\n```\nand should be written as:\n\n```\ndef method(a, b)\n  a + b\nend\n```\n\nYAML configuration example:\n\n```\nUnusedArgument:\n  Enabled: true\n  IgnoreDefs: true\n  IgnoreBlocks: false\n  IgnoreProcs: false\n```\n","summary":"<p>A rule that reports unused arguments.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/unused_argument.cr#L28","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/unused_argument.cr#L28","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:String)-instance-method","html_id":"description=(_description:String)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"args_string":"(_description : String)","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"ignore_blocks:Bool-instance-method","html_id":"ignore_blocks:Bool-instance-method","name":"ignore_blocks","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"ignore_blocks","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ignore_blocks"}},{"id":"ignore_blocks=(_ignore_blocks:Bool)-instance-method","html_id":"ignore_blocks=(_ignore_blocks:Bool)-instance-method","name":"ignore_blocks=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_ignore_blocks","doc":null,"default_value":"","external_name":"_ignore_blocks","restriction":"Bool"}],"args_string":"(_ignore_blocks : Bool)","source_link":null,"source_link":null,"def":{"name":"ignore_blocks=","args":[{"name":"_ignore_blocks","doc":null,"default_value":"","external_name":"_ignore_blocks","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ignore_blocks = _ignore_blocks"}},{"id":"ignore_defs:Bool-instance-method","html_id":"ignore_defs:Bool-instance-method","name":"ignore_defs","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"ignore_defs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ignore_defs"}},{"id":"ignore_defs=(_ignore_defs:Bool)-instance-method","html_id":"ignore_defs=(_ignore_defs:Bool)-instance-method","name":"ignore_defs=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_ignore_defs","doc":null,"default_value":"","external_name":"_ignore_defs","restriction":"Bool"}],"args_string":"(_ignore_defs : Bool)","source_link":null,"source_link":null,"def":{"name":"ignore_defs=","args":[{"name":"_ignore_defs","doc":null,"default_value":"","external_name":"_ignore_defs","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ignore_defs = _ignore_defs"}},{"id":"ignore_procs:Bool-instance-method","html_id":"ignore_procs:Bool-instance-method","name":"ignore_procs","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"ignore_procs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ignore_procs"}},{"id":"ignore_procs=(_ignore_procs:Bool)-instance-method","html_id":"ignore_procs=(_ignore_procs:Bool)-instance-method","name":"ignore_procs=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_ignore_procs","doc":null,"default_value":"","external_name":"_ignore_procs","restriction":"Bool"}],"args_string":"(_ignore_procs : Bool)","source_link":null,"source_link":null,"def":{"name":"ignore_procs=","args":[{"name":"_ignore_procs","doc":null,"default_value":"","external_name":"_ignore_procs","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ignore_procs = _ignore_procs"}},{"id":"test(source,node:Crystal::ProcLiteral,scope:AST::Scope)-instance-method","html_id":"test(source,node:Crystal::ProcLiteral,scope:AST::Scope)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ProcLiteral"},{"name":"scope","doc":null,"default_value":"","external_name":"scope","restriction":"AST::Scope"}],"args_string":"(source, node : Crystal::ProcLiteral, scope : AST::Scope)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/unused_argument.cr#L43","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/unused_argument.cr#L43","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ProcLiteral"},{"name":"scope","doc":null,"default_value":"","external_name":"scope","restriction":"AST::Scope"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ignore_procs || (find_unused_arguments(source, scope))"}},{"id":"test(source,node:Crystal::Block,scope:AST::Scope)-instance-method","html_id":"test(source,node:Crystal::Block,scope:AST::Scope)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Block"},{"name":"scope","doc":null,"default_value":"","external_name":"scope","restriction":"AST::Scope"}],"args_string":"(source, node : Crystal::Block, scope : AST::Scope)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/unused_argument.cr#L47","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/unused_argument.cr#L47","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Block"},{"name":"scope","doc":null,"default_value":"","external_name":"scope","restriction":"AST::Scope"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ignore_blocks || (find_unused_arguments(source, scope))"}},{"id":"test(source,node:Crystal::Def,scope:AST::Scope)-instance-method","html_id":"test(source,node:Crystal::Def,scope:AST::Scope)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Def"},{"name":"scope","doc":null,"default_value":"","external_name":"scope","restriction":"AST::Scope"}],"args_string":"(source, node : Crystal::Def, scope : AST::Scope)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/unused_argument.cr#L51","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/unused_argument.cr#L51","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Def"},{"name":"scope","doc":null,"default_value":"","external_name":"scope","restriction":"AST::Scope"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ignore_defs || (find_unused_arguments(source, scope))"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/unused_argument.cr#L39","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/unused_argument.cr#L39","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AST::ScopeVisitor.new(self, source)"}},{"id":"to_yaml(__temp_316:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_316:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_316","doc":null,"default_value":"","external_name":"__temp_316","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_316 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_316","doc":null,"default_value":"","external_name":"__temp_316","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_316.mapping(reference: self) do\n  _description = @description\n  if _description.nil?\n  else\n    \"Description\".to_yaml(__temp_316)\n    _description.to_yaml(__temp_316)\n  end\n  _ignore_defs = @ignore_defs\n  if _ignore_defs.nil?\n  else\n    \"IgnoreDefs\".to_yaml(__temp_316)\n    _ignore_defs.to_yaml(__temp_316)\n  end\n  _ignore_blocks = @ignore_blocks\n  if _ignore_blocks.nil?\n  else\n    \"IgnoreBlocks\".to_yaml(__temp_316)\n    _ignore_blocks.to_yaml(__temp_316)\n  end\n  _ignore_procs = @ignore_procs\n  if _ignore_procs.nil?\n  else\n    \"IgnoreProcs\".to_yaml(__temp_316)\n    _ignore_procs.to_yaml(__temp_316)\n  end\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_316)\n    _enabled.to_yaml(__temp_316)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_316)\n    _excluded.to_yaml(__temp_316)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/UselessAssign","path":"Ameba/Rule/UselessAssign.html","kind":"struct","full_name":"Ameba::Rule::UselessAssign","name":"UselessAssign","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/useless_assign.cr","line_number":29,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/useless_assign.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"MSG","value":"\"Useless assignment to variable `%s`\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that disallows useless assignments.\n\nFor example, this is considered invalid:\n\n```\ndef method\n  var = 1\n  do_something\nend\n```\n\nAnd has to be written as the following:\n\n```\ndef method\n  var = 1\n  do_something(var)\nend\n```\n\nYAML configuration example:\n\n```\nUselessAssign:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows useless assignments.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that disallows useless assignments.\n\nFor example, this is considered invalid:\n\n```\ndef method\n  var = 1\n  do_something\nend\n```\n\nAnd has to be written as the following:\n\n```\ndef method\n  var = 1\n  do_something(var)\nend\n```\n\nYAML configuration example:\n\n```\nUselessAssign:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows useless assignments.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/useless_assign.cr#L29","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/useless_assign.cr#L29","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:String)-instance-method","html_id":"description=(_description:String)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"args_string":"(_description : String)","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"test(source,node,scope:AST::Scope)-instance-method","html_id":"test(source,node,scope:AST::Scope)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""},{"name":"scope","doc":null,"default_value":"","external_name":"scope","restriction":"AST::Scope"}],"args_string":"(source, node, scope : AST::Scope)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/useless_assign.cr#L40","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/useless_assign.cr#L40","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":""},{"name":"scope","doc":null,"default_value":"","external_name":"scope","restriction":"AST::Scope"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"scope.variables.each do |var|\n  if var.captured_by_block? || var.used_in_macro?\n    next\n  end\n  var.assignments.each do |assign|\n    if assign.referenced?\n      next\n    end\n    source.error(self, assign.location, MSG % var.name)\n  end\nend"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/useless_assign.cr#L36","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/useless_assign.cr#L36","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AST::ScopeVisitor.new(self, source)"}},{"id":"to_yaml(__temp_328:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_328:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_328","doc":null,"default_value":"","external_name":"__temp_328","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_328 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_328","doc":null,"default_value":"","external_name":"__temp_328","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_328.mapping(reference: self) do\n  _description = @description\n  if _description.nil?\n  else\n    \"Description\".to_yaml(__temp_328)\n    _description.to_yaml(__temp_328)\n  end\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_328)\n    _enabled.to_yaml(__temp_328)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_328)\n    _excluded.to_yaml(__temp_328)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/UselessConditionInWhen","path":"Ameba/Rule/UselessConditionInWhen.html","kind":"struct","full_name":"Ameba::Rule::UselessConditionInWhen","name":"UselessConditionInWhen","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/useless_condition_in_when.cr","line_number":34,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/useless_condition_in_when.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"MSG","value":"\"Useless condition in when detected\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that disallows useless conditions in when clause\nwhere it is guaranteed to always return the same result.\n\nFor example, this is considered invalid:\n\n```\ncase\nwhen utc?\n  io << \" UTC\"\nwhen local?\n  Format.new(\" %:z\").format(self, io) if local?\nend\n```\n\nAnd has to be written as the following:\n\n```\ncase\nwhen utc?\n  io << \" UTC\"\nwhen local?\n  Format.new(\" %:z\").format(self, io)\nend\n```\n\nYAML configuration example:\n\n```\nUselessConditionInWhen:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows useless conditions in when clause where it is guaranteed to always return the same result.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that disallows useless conditions in when clause\nwhere it is guaranteed to always return the same result.\n\nFor example, this is considered invalid:\n\n```\ncase\nwhen utc?\n  io << \" UTC\"\nwhen local?\n  Format.new(\" %:z\").format(self, io) if local?\nend\n```\n\nAnd has to be written as the following:\n\n```\ncase\nwhen utc?\n  io << \" UTC\"\nwhen local?\n  Format.new(\" %:z\").format(self, io)\nend\n```\n\nYAML configuration example:\n\n```\nUselessConditionInWhen:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows useless conditions in when clause where it is guaranteed to always return the same result.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/useless_condition_in_when.cr#L34","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/useless_condition_in_when.cr#L34","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:String)-instance-method","html_id":"description=(_description:String)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"args_string":"(_description : String)","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"test(source,node:Crystal::When)-instance-method","html_id":"test(source,node:Crystal::When)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::When"}],"args_string":"(source, node : Crystal::When)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/useless_condition_in_when.cr#L58","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/useless_condition_in_when.cr#L58","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::When"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ConditionInWhenVisitor.new(self, source, node)"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/useless_condition_in_when.cr#L54","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/useless_condition_in_when.cr#L54","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AST::NodeVisitor.new(self, source)"}},{"id":"to_yaml(__temp_340:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_340:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_340","doc":null,"default_value":"","external_name":"__temp_340","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_340 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_340","doc":null,"default_value":"","external_name":"__temp_340","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_340.mapping(reference: self) do\n  _description = @description\n  if _description.nil?\n  else\n    \"Description\".to_yaml(__temp_340)\n    _description.to_yaml(__temp_340)\n  end\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_340)\n    _enabled.to_yaml(__temp_340)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_340)\n    _excluded.to_yaml(__temp_340)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/VariableNames","path":"Ameba/Rule/VariableNames.html","kind":"struct","full_name":"Ameba::Rule::VariableNames","name":"VariableNames","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/variable_names.cr","line_number":34,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/variable_names.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"MSG","value":"\"Var name should be underscore-cased: %s, not %s\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that enforces variable names to be in underscored case.\n\nFor example, these variable names are considered valid:\n\n```\nclass Greeting\n  @@default_greeting = \"Hello world\"\n\n  def initialize(@custom_greeting = nil)\n  end\n\n  def print_greeting\n    greeting = @custom_greeting || @@default_greeting\n    puts greeting\n  end\nend\n```\n\nAnd these are invalid method names:\n\n```\nmyBadNamedVar = 1\nwrong_Name = 2\n```\n\nYAML configuration example:\n\n```\nVariableNames:\n  Enabled: true\n```\n","summary":"<p>A rule that enforces variable names to be in underscored case.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that enforces variable names to be in underscored case.\n\nFor example, these variable names are considered valid:\n\n```\nclass Greeting\n  @@default_greeting = \"Hello world\"\n\n  def initialize(@custom_greeting = nil)\n  end\n\n  def print_greeting\n    greeting = @custom_greeting || @@default_greeting\n    puts greeting\n  end\nend\n```\n\nAnd these are invalid method names:\n\n```\nmyBadNamedVar = 1\nwrong_Name = 2\n```\n\nYAML configuration example:\n\n```\nVariableNames:\n  Enabled: true\n```\n","summary":"<p>A rule that enforces variable names to be in underscored case.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/variable_names.cr#L34","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/variable_names.cr#L34","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:String)-instance-method","html_id":"description=(_description:String)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"args_string":"(_description : String)","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"test(source,node:Crystal::Var)-instance-method","html_id":"test(source,node:Crystal::Var)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Var"}],"args_string":"(source, node : Crystal::Var)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/variable_names.cr#L51","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/variable_names.cr#L51","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::Var"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"check_node(source, node)"}},{"id":"test(source,node:Crystal::InstanceVar)-instance-method","html_id":"test(source,node:Crystal::InstanceVar)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::InstanceVar"}],"args_string":"(source, node : Crystal::InstanceVar)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/variable_names.cr#L55","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/variable_names.cr#L55","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::InstanceVar"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"check_node(source, node)"}},{"id":"test(source,node:Crystal::ClassVar)-instance-method","html_id":"test(source,node:Crystal::ClassVar)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ClassVar"}],"args_string":"(source, node : Crystal::ClassVar)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/variable_names.cr#L59","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/variable_names.cr#L59","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::ClassVar"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"check_node(source, node)"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/variable_names.cr#L41","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/variable_names.cr#L41","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AST::NodeVisitor.new(self, source)"}},{"id":"to_yaml(__temp_352:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_352:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_352","doc":null,"default_value":"","external_name":"__temp_352","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_352 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_352","doc":null,"default_value":"","external_name":"__temp_352","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_352.mapping(reference: self) do\n  _description = @description\n  if _description.nil?\n  else\n    \"Description\".to_yaml(__temp_352)\n    _description.to_yaml(__temp_352)\n  end\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_352)\n    _enabled.to_yaml(__temp_352)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_352)\n    _excluded.to_yaml(__temp_352)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Rule/WhileTrue","path":"Ameba/Rule/WhileTrue.html","kind":"struct","full_name":"Ameba::Rule::WhileTrue","name":"WhileTrue","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/Rule/Base","kind":"struct","full_name":"Ameba::Rule::Base","name":"Base"},{"html_id":"github.com/veelenga/ameba/Ameba/Config/RuleConfig","kind":"module","full_name":"Ameba::Config::RuleConfig","name":"RuleConfig"},{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/rule/while_true.cr","line_number":29,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/while_true.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"MSG","value":"\"While statement using true literal as condition\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Rule","kind":"module","full_name":"Ameba::Rule","name":"Rule"},"doc":"A rule that disallows the use of `while true` instead of using the idiomatic `loop`\n\nFor example, this is considered invalid:\n\n```\nwhile true\n  do_something\n  break if some_condition\nend\n```\n\nAnd should be replaced by the following:\n\n```\nloop do\n  do_something\n  break if some_condition\nend\n```\n\nYAML configuration example:\n\n```\nWhileTrue:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows the use of <code>while true</code> instead of using the idiomatic <code>loop</code></p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node,_dummy:Nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node, _dummy : Nil)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"::YAML::Nodes::Node"},{"name":"_dummy","doc":null,"default_value":"","external_name":"_dummy","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx, node, _dummy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.read_alias(node, {{ @type }}) do |obj|\n  return obj\nend\ninstance = allocate\nctx.record_anchor(node, instance)\ninstance.initialize(ctx, node, nil)\ninstance\n"}},{"id":"new(config=nil)-class-method","html_id":"new(config=nil)-class-method","name":"new","doc":"A rule that disallows the use of `while true` instead of using the idiomatic `loop`\n\nFor example, this is considered invalid:\n\n```\nwhile true\n  do_something\n  break if some_condition\nend\n```\n\nAnd should be replaced by the following:\n\n```\nloop do\n  do_something\n  break if some_condition\nend\n```\n\nYAML configuration example:\n\n```\nWhileTrue:\n  Enabled: true\n```\n","summary":"<p>A rule that disallows the use of <code>while true</code> instead of using the idiomatic <code>loop</code></p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"args_string":"(config = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/while_true.cr#L29","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/while_true.cr#L29","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"nil","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (raw = config.try(&.raw)).is_a?(Hash)\n  yaml = raw[rule_name]?.try(&.to_yaml)\nend\nfrom_yaml(yaml || \"{}\")\n"}}],"instance_methods":[{"id":"description:String-instance-method","html_id":"description:String-instance-method","name":"description","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description"}},{"id":"description=(_description:String)-instance-method","html_id":"description=(_description:String)-instance-method","name":"description=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"args_string":"(_description : String)","source_link":null,"source_link":null,"def":{"name":"description=","args":[{"name":"_description","doc":null,"default_value":"","external_name":"_description","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@description = _description"}},{"id":"enabled:Bool-instance-method","html_id":"enabled:Bool-instance-method","name":"enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":null,"source_link":null,"def":{"name":"enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled"}},{"id":"enabled=(_enabled:Bool)-instance-method","html_id":"enabled=(_enabled:Bool)-instance-method","name":"enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"args_string":"(_enabled : Bool)","source_link":null,"source_link":null,"def":{"name":"enabled=","args":[{"name":"_enabled","doc":null,"default_value":"","external_name":"_enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enabled = _enabled"}},{"id":"excluded:Array(String)?-instance-method","html_id":"excluded:Array(String)?-instance-method","name":"excluded","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"source_link":null,"def":{"name":"excluded","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded"}},{"id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","html_id":"excluded=(_excluded:::Union(Array(String),Nil))-instance-method","name":"excluded=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"args_string":"(_excluded : ::Union(Array(String), Nil))","source_link":null,"source_link":null,"def":{"name":"excluded=","args":[{"name":"_excluded","doc":null,"default_value":"","external_name":"_excluded","restriction":"::Union(Array(String), ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@excluded = _excluded"}},{"id":"test(source,node:Crystal::While)-instance-method","html_id":"test(source,node:Crystal::While)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::While"}],"args_string":"(source, node : Crystal::While)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/while_true.cr#L40","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/while_true.cr#L40","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Crystal::While"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if node.cond.true_literal?\nelse\n  return\nend\nsource.error(self, node.location, MSG)\n"}},{"id":"test(source)-instance-method","html_id":"test(source)-instance-method","name":"test","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/while_true.cr#L36","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/rule/while_true.cr#L36","def":{"name":"test","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AST::NodeVisitor.new(self, source)"}},{"id":"to_yaml(__temp_364:YAML::Nodes::Builder)-instance-method","html_id":"to_yaml(__temp_364:YAML::Nodes::Builder)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_364","doc":null,"default_value":"","external_name":"__temp_364","restriction":"::YAML::Nodes::Builder"}],"args_string":"(__temp_364 : YAML::Nodes::Builder)","source_link":null,"source_link":null,"def":{"name":"to_yaml","args":[{"name":"__temp_364","doc":null,"default_value":"","external_name":"__temp_364","restriction":"::YAML::Nodes::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"__temp_364.mapping(reference: self) do\n  _description = @description\n  if _description.nil?\n  else\n    \"Description\".to_yaml(__temp_364)\n    _description.to_yaml(__temp_364)\n  end\n  _enabled = @enabled\n  if _enabled.nil?\n  else\n    \"Enabled\".to_yaml(__temp_364)\n    _enabled.to_yaml(__temp_364)\n  end\n  _excluded = @excluded\n  if _excluded.nil?\n  else\n    \"Excluded\".to_yaml(__temp_364)\n    _excluded.to_yaml(__temp_364)\n  end\nend"}}],"macros":[],"types":[]}]},{"html_id":"github.com/veelenga/ameba/Ameba/Runner","path":"Ameba/Runner.html","kind":"class","full_name":"Ameba::Runner","name":"Runner","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/runner.cr","line_number":13,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/runner.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba","kind":"module","full_name":"Ameba","name":"Ameba"},"doc":"Represents a runner for inspecting sources files.\nHolds a list of rules to do inspection based on,\nlist of sources to run inspection on and a formatter\nto prepare a report.\n\n```\nconfig = Ameba::Config.load\nrunner = Ameba::Runner.new config\nrunner.run.success? # => true or false\n```\n","summary":"<p>Represents a runner for inspecting sources files.</p>","class_methods":[],"constructors":[{"id":"new(config:Config)-class-method","html_id":"new(config:Config)-class-method","name":"new","doc":"Instantiates a runner using a `config`.\n\n```\nconfig = Ameba::Config.load\nconfig.files = files\nconfig.formatter = formatter\n\nAmeba::Runner.new config\n```\n","summary":"<p>Instantiates a runner using a <code>config</code>.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":"Config"}],"args_string":"(config : Config)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/runner.cr#L39","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/runner.cr#L39","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":"Config"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(config)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"run-instance-method","html_id":"run-instance-method","name":"run","doc":"Performs the inspection. Iterates through all sources and test it using\nlist of rules. If a specific rule fails on a specific source, it adds\nan error to that source.\n\nThis action also notifies formatter when inspection is started/finished,\nand when a specific source started/finished to be inspected.\n\n```\nrunner = Ameba::Runner.new config\nrunner.run # => returns runner again\n```\n","summary":"<p>Performs the inspection.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/runner.cr#L65","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/runner.cr#L65","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  @formatter.started(@sources)\n  @sources.each do |source|\n    @formatter.source_started(source)\n    if (@syntax_rule.catch(source)).valid?\n      @rules.each do |rule|\n        if rule.excluded?(source)\n          next\n        end\n        rule.test(source)\n      end\n      check_unneeded_directives(source)\n    end\n    @formatter.source_finished(source)\n  end\n  self\nensure\n  @formatter.finished(@sources)\nend"}},{"id":"sources:Array(Source)-instance-method","html_id":"sources:Array(Source)-instance-method","name":"sources","doc":"A list of sources to run inspection on.","summary":"<p>A list of sources to run inspection on.</p>","abstract":false,"args":[],"args_string":" : Array(Source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/runner.cr#L18","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/runner.cr#L18","def":{"name":"sources","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Source)","visibility":"Public","body":"@sources"}},{"id":"success?-instance-method","html_id":"success?-instance-method","name":"success?","doc":"Indicates whether the last inspection successful or not.\nIt returns true if no issues in sources found, false otherwise.\n\n```\nrunner = Ameba::Runner.new config\nrunner.run\nrunner.success? # => true or false\n```\n","summary":"<p>Indicates whether the last inspection successful or not.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/runner.cr#L94","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/runner.cr#L94","def":{"name":"success?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@sources.all?(&.valid?)"}}],"macros":[],"types":[]},{"html_id":"github.com/veelenga/ameba/Ameba/Source","path":"Ameba/Source.html","kind":"class","full_name":"Ameba::Source","name":"Source","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Ameba/InlineComments","kind":"module","full_name":"Ameba::InlineComments","name":"InlineComments"},{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/source.cr","line_number":4,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/veelenga/ameba/Ameba/InlineComments","kind":"module","full_name":"Ameba::InlineComments","name":"InlineComments"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba","kind":"module","full_name":"Ameba","name":"Ameba"},"doc":"An entity that represents a Crystal source file.\nHas path, lines of code and errors reported by rules.","summary":"<p>An entity that represents a Crystal source file.</p>","class_methods":[],"constructors":[{"id":"new(code:String,path=&quot;&quot;)-class-method","html_id":"new(code:String,path=&amp;quot;&amp;quot;)-class-method","name":"new","doc":"Creates a new source by `code` and `path`.\n\nFor example:\n\n```\npath = \"./src/source.cr\"\nAmeba::Source.new File.read(path), path\n```\n","summary":"<p>Creates a new source by <code><a href=\"../Ameba/Source.html#code%3AString-instance-method\">#code</a></code> and <code><a href=\"../Ameba/Source.html#path%3AString-instance-method\">#path</a></code>.</p>","abstract":false,"args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"},{"name":"path","doc":null,"default_value":"\"\"","external_name":"path","restriction":""}],"args_string":"(code : String, path = <span class=\"s\">&quot;&quot;</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr#L43","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr#L43","def":{"name":"new","args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"},{"name":"path","doc":null,"default_value":"\"\"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(code, path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"ast-instance-method","html_id":"ast-instance-method","name":"ast","doc":"Returns AST nodes constructed by `Crystal::Parser`.\n\n```\nsource = Ameba::Source.new code, path\nsource.ast\n```\n","summary":"<p>Returns AST nodes constructed by <code>Crystal::Parser</code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr#L104","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr#L104","def":{"name":"ast","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ast || (@ast = (Crystal::Parser.new(code)).tap do |parser|\n  parser.filename = @path\nend.parse)"}},{"id":"code:String-instance-method","html_id":"code:String-instance-method","name":"code","doc":"Crystal code (content of a source file).","summary":"<p>Crystal code (content of a source file).</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr#L25","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr#L25","def":{"name":"code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@code"}},{"id":"error(rule:Rule::Base,location,message:String,status=nil)-instance-method","html_id":"error(rule:Rule::Base,location,message:String,status=nil)-instance-method","name":"error","doc":"Adds a new error to the list of errors.\n\n```\nsource.error rule, location, \"Line too long\"\n```\n","summary":"<p>Adds a new error to the list of errors.</p>","abstract":false,"args":[{"name":"rule","doc":null,"default_value":"","external_name":"rule","restriction":"Rule::Base"},{"name":"location","doc":null,"default_value":"","external_name":"location","restriction":""},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"status","doc":null,"default_value":"nil","external_name":"status","restriction":""}],"args_string":"(rule : Rule::Base, location, message : String, status = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr#L52","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr#L52","def":{"name":"error","args":[{"name":"rule","doc":null,"default_value":"","external_name":"rule","restriction":"Rule::Base"},{"name":"location","doc":null,"default_value":"","external_name":"location","restriction":""},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"status","doc":null,"default_value":"nil","external_name":"status","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if location_disabled?(location, rule.name)\n  status || (status = :disabled)\nend\nerrors << (Error.new(rule, location, message, status))\n"}},{"id":"error(rule:Rule::Base,l,c,message:String,status=nil)-instance-method","html_id":"error(rule:Rule::Base,l,c,message:String,status=nil)-instance-method","name":"error","doc":"Adds a new error to the list of errors using line and column number.\n\n```\nsource.error rule, line_number, column_number, \"Bad code\"\n```\n","summary":"<p>Adds a new error to the list of errors using line and column number.</p>","abstract":false,"args":[{"name":"rule","doc":null,"default_value":"","external_name":"rule","restriction":"Rule::Base"},{"name":"l","doc":null,"default_value":"","external_name":"l","restriction":""},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":""},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"status","doc":null,"default_value":"nil","external_name":"status","restriction":""}],"args_string":"(rule : Rule::Base, l, c, message : String, status = <span class=\"n\">nil</span>)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr#L63","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr#L63","def":{"name":"error","args":[{"name":"rule","doc":null,"default_value":"","external_name":"rule","restriction":"Rule::Base"},{"name":"l","doc":null,"default_value":"","external_name":"l","restriction":""},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":""},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"status","doc":null,"default_value":"nil","external_name":"status","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"location = Crystal::Location.new(path, l, c)\nerror(rule, location, message, status)\n"}},{"id":"errors:Array(Ameba::Source::Error)-instance-method","html_id":"errors:Array(Ameba::Source::Error)-instance-method","name":"errors","doc":"List of errors reported.","summary":"<p>List of errors reported.</p>","abstract":false,"args":[],"args_string":" : Array(Ameba::Source::Error)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr#L28","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr#L28","def":{"name":"errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@errors"}},{"id":"fullpath-instance-method","html_id":"fullpath-instance-method","name":"fullpath","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr#L111","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr#L111","def":{"name":"fullpath","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@fullpath || (@fullpath = File.expand_path(@path))"}},{"id":"lines-instance-method","html_id":"lines-instance-method","name":"lines","doc":"Returns lines of code splitted by new line character.\nSince `code` is immutable and can't be changed, this\nmethod caches lines in an instance variable, so calling\nit second time will not perform a split, but will return\nlines instantly.\n\n```\nsource = Ameba::Source.new \"a = 1\\nb = 2\", path\nsource.lines # => [\"a = 1\", \"b = 2\"]\n```\n","summary":"<p>Returns lines of code splitted by new line character.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr#L93","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr#L93","def":{"name":"lines","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@lines || (@lines = @code.split(\"\\n\"))"}},{"id":"path:String-instance-method","html_id":"path:String-instance-method","name":"path","doc":"Path to the source file.","summary":"<p>Path to the source file.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr#L22","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr#L22","def":{"name":"path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@path"}},{"id":"valid?-instance-method","html_id":"valid?-instance-method","name":"valid?","doc":"Indicates whether source is valid or not.\nReturns true if the list or errors empty, false otherwise.\n\n```\nsource = Ameba::Source.new code, path\nsource.valid? # => true\nsource.error rule, location, message\nsource.valid? # => false\n```\n","summary":"<p>Indicates whether source is valid or not.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr#L78","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr#L78","def":{"name":"valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"errors.reject(&.disabled?).empty?"}}],"macros":[],"types":[{"html_id":"github.com/veelenga/ameba/Ameba/Source/Error","path":"Ameba/Source/Error.html","kind":"struct","full_name":"Ameba::Source::Error","name":"Error","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/veelenga/ameba/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/source.cr","line_number":11,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba/Source","kind":"class","full_name":"Ameba::Source","name":"Source"},"doc":"Represents an error caught by Ameba.\n\nEach error has the rule that created this error,\nlocation of the issue, message and status.","summary":"<p>Represents an error caught by Ameba.</p>","class_methods":[],"constructors":[{"id":"new(rule:Rule::Base,location:Crystal::Location?,message:String,status:Symbol?)-class-method","html_id":"new(rule:Rule::Base,location:Crystal::Location?,message:String,status:Symbol?)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rule","doc":null,"default_value":"","external_name":"rule","restriction":"Rule::Base"},{"name":"location","doc":null,"default_value":"","external_name":"location","restriction":"Crystal::Location | ::Nil"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"status","doc":null,"default_value":"","external_name":"status","restriction":"Symbol | ::Nil"}],"args_string":"(rule : Rule::Base, location : Crystal::Location?, message : String, status : Symbol?)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr#L11","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr#L11","def":{"name":"new","args":[{"name":"rule","doc":null,"default_value":"","external_name":"rule","restriction":"Rule::Base"},{"name":"location","doc":null,"default_value":"","external_name":"location","restriction":"Crystal::Location | ::Nil"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"status","doc":null,"default_value":"","external_name":"status","restriction":"Symbol | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(rule, location, message, status)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr#L11","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr#L11","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Error.new(@rule.clone, @location.clone, @message.clone, @status.clone)"}},{"id":"disabled?-instance-method","html_id":"disabled?-instance-method","name":"disabled?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr#L16","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/source.cr#L16","def":{"name":"disabled?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"status == (:disabled)"}},{"id":"location:Crystal::Location?-instance-method","html_id":"location:Crystal::Location?-instance-method","name":"location","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Crystal::Location?","source_link":null,"source_link":null,"def":{"name":"location","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crystal::Location | ::Nil","visibility":"Public","body":"@location"}},{"id":"message:String-instance-method","html_id":"message:String-instance-method","name":"message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"source_link":null,"def":{"name":"message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@message"}},{"id":"rule:Rule::Base-instance-method","html_id":"rule:Rule::Base-instance-method","name":"rule","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Rule::Base","source_link":null,"source_link":null,"def":{"name":"rule","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Rule::Base","visibility":"Public","body":"@rule"}},{"id":"status:Symbol?-instance-method","html_id":"status:Symbol?-instance-method","name":"status","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Symbol?","source_link":null,"source_link":null,"def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol | ::Nil","visibility":"Public","body":"@status"}}],"macros":[],"types":[]}]},{"html_id":"github.com/veelenga/ameba/Ameba/Tokenizer","path":"Ameba/Tokenizer.html","kind":"class","full_name":"Ameba::Tokenizer","name":"Tokenizer","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/tokenizer.cr","line_number":14,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/tokenizer.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Ameba","kind":"module","full_name":"Ameba","name":"Ameba"},"doc":"Represents Crystal syntax tokenizer based on `Crystal::Lexer`.\n\n```\nsource = Ameba::Source.new code, path\ntokenizer = Ameba::Tokenizer.new(source)\ntokenizer.run do |token|\n  puts token\nend\n```\n","summary":"<p>Represents Crystal syntax tokenizer based on <code>Crystal::Lexer</code>.</p>","class_methods":[],"constructors":[{"id":"new(lexer:Crystal::Lexer)-class-method","html_id":"new(lexer:Crystal::Lexer)-class-method","name":"new","doc":"Instantiates Tokenizer using a `lexer`.\n\n```\nlexer = Crystal::Lexer.new(code)\nAmeba::Tokenizer.new(lexer)\n```\n","summary":"<p>Instantiates Tokenizer using a <code>lexer</code>.</p>","abstract":false,"args":[{"name":"lexer","doc":null,"default_value":"","external_name":"lexer","restriction":"Crystal::Lexer"}],"args_string":"(lexer : Crystal::Lexer)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/tokenizer.cr#L37","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/tokenizer.cr#L37","def":{"name":"new","args":[{"name":"lexer","doc":null,"default_value":"","external_name":"lexer","restriction":"Crystal::Lexer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(lexer)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(source)-class-method","html_id":"new(source)-class-method","name":"new","doc":"Instantiates Tokenizer using a `source`.\n\n```\nsource = Ameba::Source.new code, path\nAmeba::Tokenizer.new(source)\n```\n","summary":"<p>Instantiates Tokenizer using a <code>source</code>.</p>","abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/tokenizer.cr#L22","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/tokenizer.cr#L22","def":{"name":"new","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(source)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"run(&block:Crystal::Token->_)-instance-method","html_id":"run(&amp;block:Crystal::Token-&gt;_)-instance-method","name":"run","doc":"Runs the tokenizer and yields each token as a block argument.\n\n```\nAmeba::Tokenizer.new(source).run do |token|\n  puts token\nend\n```\n","summary":"<p>Runs the tokenizer and yields each token as a block argument.</p>","abstract":false,"args":[],"args_string":"(&block : Crystal::Token -> _)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/tokenizer.cr#L48","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/tokenizer.cr#L48","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Crystal::Token -> _)"},"return_type":"","visibility":"Public","body":"begin\n  run_normal_state(@lexer, &block)\n  true\nrescue e : Crystal::SyntaxException\n  false\nend"}}],"macros":[],"types":[]}]},{"html_id":"github.com/veelenga/ameba/Crystal","path":"Crystal.html","kind":"module","full_name":"Crystal","name":"Crystal","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"ameba/support/ast.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/support/ast.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"workaround for https://github.com/crystal-lang/crystal/pull/6032","summary":"<p>workaround for https://github.com/crystal-lang/crystal/pull/6032</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/veelenga/ameba/Crystal/Case","path":"Crystal/Case.html","kind":"class","full_name":"Crystal::Case","name":"Case","abstract":false,"superclass":{"html_id":"github.com/veelenga/ameba/Crystal/ASTNode","kind":"class","full_name":"Crystal::ASTNode","name":"ASTNode"},"ancestors":[{"html_id":"github.com/veelenga/ameba/Crystal/ASTNode","kind":"class","full_name":"Crystal::ASTNode","name":"ASTNode"},{"html_id":"github.com/veelenga/ameba/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/veelenga/ameba/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ameba/support/ast.cr","line_number":1,"url":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/support/ast.cr"}],"repository_name":"github.com/veelenga/ameba","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/veelenga/ameba/Crystal","kind":"module","full_name":"Crystal","name":"Crystal"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"accept_children(visitor)-instance-method","html_id":"accept_children(visitor)-instance-method","name":"accept_children","doc":null,"summary":null,"abstract":false,"args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":""}],"args_string":"(visitor)","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/support/ast.cr#L1","source_link":"https://github.com/veelenga/ameba/blob/bf907ee98b868506438fe39dc6838d0e7021566c/src/ameba/support/ast.cr#L1","def":{"name":"accept_children","args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@cond.try(&.accept(visitor))\n@whens.each(&.accept(visitor))\n@else.try(&.accept(visitor))\n"}}],"macros":[],"types":[]}]}]}}